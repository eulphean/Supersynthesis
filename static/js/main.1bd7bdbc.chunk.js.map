{"version":3,"sources":["components/CommonStyles.js","svg/close.svg","stores/EditModeStore.js","stores/BpmStore.js","stores/ConfigIndexStore.js","stores/TimerStore.js","stores/LightConfigStore.js","stores/SequencerStore.js","stores/ModeStore.js","stores/SynthStore.js","stores/FullDbConfigStore.js","components/Websocket.js","components/Popup.js","svg/about.svg","components/Navbar.js","stores/TouchStore.js","components/Light.js","components/SequencerBubble.js","components/LightManager.js","components/MeshManager.js","components/TouchEllipseManager.js","components/BpmManager.js","components/WaveCanvas.js","components/Bottombar.js","components/ModesBar.js","components/Visualization/VisLight.js","components/Visualization/DataPoint.js","components/Visualization/VisManager.js","components/Visualization/VisCanvas.js","components/App.js","index.js"],"names":["color","bgBlack","fgWhite","selected","disabled","fontSize","extraSmall","kindaSmall","verySmall","lessSmall","small","lessBig","big","veryBig","extraBig","huge","veryHuge","extraHuge","massive","veryMassive","extraMassive","enormous","veryEnormous","extraEnormous","insane","veryInsaane","extraInsane","gaia","veryGaia","extraGaia","padding","tiny","enourmous","veryInsane","fontFamily","_defs","_g","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgClose","_ref","svgRef","title","props","createElement","viewBox","ref","id","className","width","height","x1","y1","x2","y2","ForwardRef","forwardRef","constructor","isEditMode","isUserInteracting","isPopupActive","subscribers","subscribe","listener","push","setEditMode","val","isEditing","forEach","s","setUserInteracting","console","log","setIsPopupActive","dbBpm","localBpm","getDbBpm","getLocalBpm","setDbBpm","newBpm","l","setLocalBpm","configIndex","subscriber","getConfigIndex","setConfigIndex","newConfigIndex","popupListener","resetListener","resetTimerId","popupTimerId","subscribePopup","subscribeReset","startTimer","clearTimeout","setTimeout","showPopup","PopupType","Send","reset","popupType","cancelReset","cancelPopup","LIGHT_STATE","GROW_STATE","dbLightConfig","growConfig","heightConfig","activeLightConfig","maxLightHeight","prepareDefaultLightConfig","hasConfigEdited","configEditSubscriber","subscribeForConfigChange","setMaxHeight","Math","round","random","state","active","getActiveLightConfig","setLightConfig","lightConfig","lightState","getDbLightState","getActiveLightState","setActiveLightState","TimerStore","getGrowState","setGrowState","growState","activeState","getHeightState","setHeightState","drawConfig","indices","getIndices","setSequencerData","payload","j","idx","clearConfig","getLightState","MODE","currentMode","getCurrentMode","setMode","newMode","commitToDb","Websocket","commitModeData","localSynthStack","socketState","canModify","index","localState","setLocalNote","newValue","socketConfigAtIndex","socketIdAtIndex","valueAtIndex","socketId","sendSynthNote","JSON","stringify","setSynthNotes","data","getLocalNote","value","getSocketStateAtIndex","allLightConfigs","allLightConfigsSubscriber","getLightConfigs","callback","fetchLightConfigs","setLightConfigs","c","siteURL","webURL","socket","io","reconnection","reconnectionDelay","reconnectionAttempts","Infinity","once","on","logTime","processFullPayload","SequencerStore","ModeStore","SynthStore","FullDbConfigStore","disconnect","emit","commitLightConfigData","LightConfigStore","BpmStore","ConfigIndexStore","json","Date","config","bpm","PopupState","About","Score","customFadeIn","Radium","keyframes","from","opacity","to","customFadeOut","styles","overlay","position","top","bottom","left","right","background","zIndex","fadeIn","animationName","animationDuration","animationFillMode","animationTimingFunction","fadeOut","fadeOutUp","fadeOutDown","fadeInDown","fadeInUp","showOverlay","hideOverlay","showContent","hideContent","contentContainer","display","alignItems","justifyContent","content","borderRadius","overflow","maxWidth","maxHeight","stretchContainer","flexDirection","paddingLeft","paddingRight","borderStyle","borderWidth","borderColor","marginTop","marginBottom","textAlign","letterSpacing","lineHeight","sendTitle","subtitle","buttonContainer","flexContainer","button","body","mediaQueryOnText","iconContainer","alignSelf","marginRight","fill","icon","footerContainer","footer","copyright","link","backgroundColor","Popup","React","Component","super","isVisible","popupState","createRef","render","overlayStyle","contentContainerStyle","getAboutContent","getSendContent","getScoreContent","onClick","handleOnTouch","onTouchStart","style","onAnimationEnd","contentAnimationEnd","setState","getIconButton","hidePopup","Exit","bodyStyle","iconButton","onYesHandle","onNoHandle","getFooter","description","rel","href","event","stopPropagation","EditModeStore","current","scrollTop","SvgAbout","transform","d","fillRule","stroke","strokeWidth","animation","rotate","container","outline","fbWhite","simpleRotation","Navbar","popupRef","componentDidMount","onShowPopup","onReset","aboutStyle","heightStyle","getHeightStyle","block","handleAbout","getHeight","deviceHeight","window","innerHeight","deviceWidth","innerWidth","orientation","ORIENTATION","PORTRAIT","LANDSCAPE","touches","setTouches","newTouches","getTouches","Light","xPos","yPos","lightWidth","p5","growFactor","pos","createVector","newX","getNewPos","topPos","lightActiveColor","lightInactiveColor","lightBgColor","lightPointColor","curIdx","updateHeight","growIntervalId","setInterval","randomizeGrowState","draw","meshEllipsePos","boundaryWidth","noStroke","analyseTouch","socketStateAtIndex","rect","updateLight","isOnFromDb","canDraw","TouchStore","x","dBottomPos","dist","dTopPos","updateGrowState","handleGrowState","curLightState","curGrowState","curGrowthActive","curHeight","mapPos","onHeight","map","drawLightPoint","circle","isOn","isGrowing","updateDrawState","setDrawState","calcGrowState","r","int","SequencerBubble","sequencerActiveColor","sequencerInactiveColor","light","ellipse","LightManager","lights","showResetAnimation","curTime","var","dir","sequencerBubble","setup","prepareLights","lightIncrement","MeshManager","ellipsePos","prevMouseX","prevMouseY","mouseX","mouseY","containEllipse","drawLine","drawEllipse","strokeWeight","startPoint","endPoint","weight","line","TouchEllipseManager","t","y","posX","posY","bpmManager","curBpm","update","shouldAdd","sum","elapsedTime","now","v","sin","mapped","floor","sketch","lightManager","meshManager","touchEllipseManager","shouldTrigger","select","createCanvas","BpmManager","mousePressed","mouseMoved","mouseVal","touchMoved","touchEnded","windowResized","resizeCanvas","margin","hide","show","WaveCanvas","containerRef","sketchRef","doesSketchExist","onModeUpdate","componentDidUpdate","myP5","canvasStyle","Fragment","info","cursor","boxShadow","BottomBar","isSendEnabled","onBpmUpdated","onConfigIndexUpdated","onEditModeUpdate","onLightConfigChange","getElements","leftItem","getLeftItem","sendButton","getSendButton","bpmNum","item","onBack","buttonStyle","onSend","hasConfigChanged","selectedButton","ModesBar","synthButton","dreamButton","scoreButton","sweepButton","handleClick","VisLight","DataPoint","rot","pointSize","pointShape","rotateSpeed","showInactive","showActive","colorInactive","colorActive","translate","rectMode","CENTER","pop","triangle","arc","PI","VisManager","visLights","dataPoints","numEntries","showPoints","showLights","prepareDataPoints","Array","a","dp","guiUpdates","newData","newNumEntries","visManager","updateGuiData","useRef","numMaxEntries","setMaxEntries","useState","setData","rotation","useEffect","DatGui","onUpdate","prevData","DatString","path","label","DatNumber","min","max","step","DatBoolean","DatSelect","options","DatColor","WebkitOverflowScrolling","App","addEventListener","handleResize","evaluateOrientation","document","e","preventDefault","zoom","Router","basename","Routes","Route","element","VisCanvas","ReactDOM","StyleRoot","getElementById"],"mappings":"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","file":"static/js/main.1bd7bdbc.chunk.js","sourcesContent":["const color = {\r\n    bgBlack: 'black',\r\n    fgWhite: 'white',\r\n    selected: 'red',\r\n    disabled: 'grey'\r\n};\r\n\r\nconst fontSize = {\r\n    extraSmall: '8px',\r\n    kindaSmall: '10px',\r\n    verySmall: '12px',\r\n    lessSmall: '14px',\r\n    small: '16px',\r\n    lessBig: '18px',\r\n    big: '20px',\r\n    veryBig: '24px',\r\n    extraBig: '28px',\r\n    huge: '32px',\r\n    veryHuge: '36px',\r\n    extraHuge: '40px',\r\n    massive: '44px',\r\n    veryMassive: '48px',\r\n    extraMassive: '52px',\r\n    enormous: '56px',\r\n    veryEnormous: '60px',\r\n    extraEnormous: '64px',\r\n    insane: '68px',\r\n    veryInsaane: '72px',\r\n    extraInsane: '76px',\r\n    gaia: '80px',\r\n    veryGaia: '84px',\r\n    extraGaia: '88px'\r\n};\r\n\r\nconst padding = {\r\n    tiny: '2px',\r\n    // Increments of 4\r\n    extraSmall: '4px',\r\n    kindaSmall: '6px',\r\n    verySmall: '8px',\r\n    small: '12px',\r\n    lessBig: '16px',\r\n    // Incremenets of 8\r\n    big : '20px',\r\n    veryBig : '28px',\r\n    extraBig : '36px',\r\n    // Increments of 12\r\n    huge: '52px',\r\n    veryHuge: '64px',\r\n    extraHuge: '76px',\r\n    // Incremenets of 16\r\n    massive: '92px',\r\n    veryMassive: '108px',\r\n    extraMassive: '124px',\r\n    // Increment of 20\r\n    enourmous: '100px',\r\n    veryEnormous: '120px',\r\n    extraEnormous: '140px',\r\n    // Increment of 40\r\n    insane: '160px',\r\n    veryInsane: '200px',\r\n    extraInsane: '240px'\r\n\r\n};\r\n\r\nconst fontFamily = {\r\n    heatwave: 'heatwaveregular',\r\n    airwaves: 'airwavesregular',\r\n    josefin: 'josefin_sanssemibold'\r\n};\r\n\r\nexport { color, fontSize, fontFamily, padding };","var _defs, _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from \"react\";\nconst SvgClose = _ref => {\n  let {\n    svgRef,\n    title,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 48.51 48.51\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".rect{fill:inherit;}.cls-2{fill:none;stroke:#b3b3b3;stroke-miterlimit:10;stroke-width:4px;}\"))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_2\",\n    \"data-name\": \"Layer 2\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1-2\",\n    \"data-name\": \"Layer 1\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    className: \"rect\",\n    width: 48.51,\n    height: 48.51\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    className: \"cls-2\",\n    x1: 9.63,\n    y1: 9.64,\n    x2: 38.88,\n    y2: 38.89\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    className: \"cls-2\",\n    x1: 9.63,\n    y1: 38.89,\n    x2: 38.88,\n    y2: 9.64\n  })))));\n};\nconst ForwardRef = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(SvgClose, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/close.787123c6.svg\";\nexport { ForwardRef as ReactComponent };","// Name: EditModeStore.js\r\n// Author: Amay Kataria. \r\n// Date: 02/24/2022\r\n// Description: This data store keeps track of when the user is interacting with the canvas and when\r\n// are we ready to remove that interactive pattern. \r\n\r\nclass EditModeStore {\r\n    constructor() {\r\n        this.isEditMode = false; \r\n        this.isUserInteracting = false; \r\n        this.isPopupActive = false; \r\n        this.subscribers = []; \r\n    }\r\n\r\n    subscribe(listener) {\r\n        this.subscribers.push(listener); \r\n    }\r\n\r\n    setEditMode(val) {\r\n        if (this.isEditing !== val) {\r\n            this.isEditMode = val;\r\n            this.subscribers.forEach(s => s()); \r\n        }\r\n    }\r\n\r\n    setUserInteracting(val) {\r\n        if (this.isUserInteracting !== val) {\r\n            console.log('User Interacting: ' + val)\r\n            this.isUserInteracting = val; \r\n            this.subscribers.forEach(s => s());\r\n        }\r\n    }\r\n\r\n    setIsPopupActive(val) {\r\n        if (this.isPopupActive !== val) {\r\n            console.log('Popup Active:' + val);\r\n            this.isPopupActive = val; \r\n            this.subscribers.forEach(s => s());\r\n        }\r\n    }\r\n}\r\n\r\nexport default new EditModeStore();","// Name: BpmStore.js\r\n// Author: Amay Kataria\r\n// Date: 03/03/2022\r\n// Description: This data store is respnsible to hold the Bpm that is retrieved from the database\r\n// as well as the Bpm that the user is synthesisizng locally. \r\n\r\nclass BpmStore {\r\n    constructor() {\r\n        // Bpm coming from the database. \r\n        this.dbBpm = 100;\r\n        // Locally modified Bpm. \r\n        this.localBpm = 100; \r\n\r\n        // Fire this when new Bpm is received from the database. \r\n        this.subscribers = [];\r\n    }\r\n\r\n    subscribe(listener) {\r\n        this.subscribers.push(listener);\r\n    }\r\n\r\n    getDbBpm() {\r\n        return this.dbBpm; \r\n    }\r\n\r\n    getLocalBpm() {\r\n        return this.localBpm; \r\n    }\r\n\r\n    setDbBpm(newBpm) {\r\n        // New payload from db. \r\n        // Reset both db and local bpm. \r\n        this.dbBpm = newBpm;\r\n        this.localBpm =  newBpm;\r\n\r\n        // Let subscribers know new Bpm values are updated. \r\n        this.subscribers.forEach(l => {\r\n            l();\r\n        });\r\n    }\r\n\r\n    setLocalBpm(localBpm) {\r\n        // Whenever local bpm gets updated, we want to let \r\n        // subscribers know that we have new values. \r\n        if (this.localBpm !== localBpm) {\r\n            this.localBpm = localBpm;\r\n            // console.log(this.localBpm);\r\n            this.subscribers.forEach(l => {\r\n                l();\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default new BpmStore(); ","// Name: ConfigIndexStore.js\r\n// Author: Amay Kataria\r\n// Date: 03/03/2022\r\n// Description: This data store is responsible to store the current config index on top\r\n// of which the user is actually drawing the pattern. \r\n\r\nclass ConfigIndexStore {\r\n    constructor() {\r\n        // Default values. \r\n        this.configIndex = 0; \r\n        this.subscriber = ''; \r\n    }\r\n\r\n    getConfigIndex() {\r\n        return this.configIndex; \r\n    }\r\n\r\n    subscribe(listener) {\r\n        this.subscriber = listener; \r\n    }\r\n\r\n    setConfigIndex(newConfigIndex) {\r\n        this.configIndex = newConfigIndex;\r\n        // Let subscriber know we have updates. \r\n        if (this.subscriber) {\r\n            this.subscriber();\r\n        }\r\n    }\r\n}\r\n\r\nexport default new ConfigIndexStore(); ","// Name: TimerStore.js\r\n// Author: Amay Kataria. \r\n// Date: 03/11/2022\r\n// Description: A simple data store to start a timer whenever a user stops interacting on the screen.\r\n// This time helps us schedule some events like initiating a popup for sending a message.\r\n\r\nimport { PopupType } from \"../components/Popup\";\r\n\r\nconst POPUP_TIME = 3000;\r\nconst RESET_TIME = 30000; \r\nclass TimerStore {\r\n    constructor() {\r\n        this.isEditMode = false; \r\n\r\n        this.popupListener = ''; \r\n        this.resetListener = '';\r\n        this.resetTimerId = ''; \r\n        this.popupTimerId = ''\r\n    }\r\n\r\n    subscribePopup(listener) {\r\n        this.popupListener = listener; \r\n    }\r\n\r\n    subscribeReset(listener) {\r\n        this.resetListener = listener; \r\n    }\r\n\r\n    startTimer() {\r\n        if (this.popupTimerId !== '') {\r\n            clearTimeout(this.popupTimerId);\r\n        }\r\n        // This popup is always to SEND the score out.\r\n        this.popupTimerId = setTimeout(this.showPopup.bind(this, PopupType.Send), POPUP_TIME);\r\n\r\n        if (this.resetTimerId !== '') {\r\n            clearTimeout(this.resetTimerId); \r\n        }\r\n        this.resetTimerId = setTimeout(this.reset.bind(this), RESET_TIME); \r\n    }\r\n    \r\n    showPopup(popupType) {\r\n        console.log('Showing Popup: ' + popupType);\r\n        this.popupListener(popupType); \r\n        this.popupTimerId = ''; \r\n    }\r\n\r\n    reset() {\r\n        console.log('Trigger reset');\r\n        this.resetListener(); \r\n    }\r\n\r\n    cancelReset() {\r\n        if (this.resetTimerId !== '') {\r\n            console.log('Clearing Reset');\r\n            clearTimeout(this.resetTimerId);\r\n            this.resetTimerId = ''; \r\n        }\r\n    }\r\n\r\n    cancelPopup() {\r\n        console.log('Clearing Popup');\r\n        clearTimeout(this.popupTimerId);\r\n        this.popupTimerId = '';\r\n    }\r\n}\r\n\r\nexport default new TimerStore();","// Name: LightConfigStore.js\r\n// Author: Amay Kataria. \r\n// Date: 02/19/2022\r\n// Description: Core data store for the application that stores the data for all the 24 lights. This data is divided\r\n// into four states: light, height, grow, and draw. These states are responsible for how the lights are drawn and \r\n// transmitted to the database. \r\n\r\nimport TimerStore from \"./TimerStore\";\r\n\r\nexport const LIGHT_STATE = {\r\n    ON: 1,\r\n    OFF: 0\r\n};\r\n\r\nexport const GROW_STATE = {\r\n    NONE: 0,\r\n    GROW: 1,\r\n    SHRINK: 2\r\n}\r\n\r\nconst NUM_LIGHTS = 24;\r\n\r\nclass LightConfigStore {\r\n    constructor() {\r\n        // Separate config arrays for the 24 lights.\r\n        this.dbLightConfig = []; // What comes from the dB. Don't modify this. \r\n        this.growConfig = [];\r\n        this.heightConfig = []; \r\n        this.activeLightConfig = []; // Currently being edited in the app. \r\n\r\n        // Helper value to create default heights. \r\n        this.maxLightHeight = 0;\r\n\r\n        // Default light config for 24 lights. \r\n        this.prepareDefaultLightConfig();\r\n        \r\n        this.hasConfigEdited = false; \r\n        this.configEditSubscriber = ''\r\n    }\r\n\r\n    subscribeForConfigChange(listener) {\r\n        this.configEditSubscriber = listener; \r\n    }\r\n\r\n    setMaxHeight(height) {\r\n        this.maxLightHeight = height; \r\n    }\r\n\r\n    // Default config for 24 lights. \r\n    prepareDefaultLightConfig() {\r\n        console.log('Preparing default config.');\r\n        for (let i = 0; i < NUM_LIGHTS; i++) {\r\n            // All lights are off by default and are not doing any growth. \r\n            // Just a simple helper routine.\r\n            let r = Math.round(Math.random());\r\n            let s = r === 0 ? LIGHT_STATE.ON : LIGHT_STATE.OFF; \r\n            this.dbLightConfig.push(s);\r\n            this.activeLightConfig.push(s); \r\n            this.growConfig.push({state: GROW_STATE.NONE, active: false});\r\n            this.heightConfig.push(0); \r\n        }\r\n    }\r\n\r\n    getActiveLightConfig() {\r\n        // Return the one that we have been editing. \r\n        return this.activeLightConfig; \r\n    }\r\n    // Sets the light config along with other configs that \r\n    // coming from the server. Overwrite activeLightConfig as well.\r\n    setLightConfig(lightConfig) {\r\n        for (let i = 0; i < lightConfig.length; i++) {\r\n            let lightState = lightConfig[i];\r\n            this.dbLightConfig[i] = lightState; \r\n            this.activeLightConfig[i] = lightState; \r\n            this.growConfig[i] = {state: GROW_STATE.NONE, active: false}; // Reset growth on every light. \r\n            this.heightConfig[i] = (lightState === LIGHT_STATE.ON) ? this.maxLightHeight : 0; \r\n            // Don't modify Draw State. That is modified by the sequencer event. \r\n        }\r\n\r\n        if (this.hasConfigEdited === true) {\r\n            this.hasConfigEdited = false; \r\n            this.configEditSubscriber(); \r\n        }\r\n    }\r\n\r\n    // Light config from the database. \r\n    getDbLightState(i) {\r\n        return this.dbLightConfig[i];\r\n    }\r\n    // Light config that is actively being edited. \r\n    getActiveLightState(i) {\r\n        return this.activeLightConfig[i];\r\n    }\r\n    setActiveLightState(i, lightState) {\r\n        this.activeLightConfig[i] = lightState; \r\n\r\n        if (this.hasConfigEdited === false) {\r\n            this.hasConfigEdited = true;\r\n            this.configEditSubscriber();\r\n        }\r\n\r\n        TimerStore.cancelReset();\r\n    }\r\n\r\n    // GET/SET light's grow state. \r\n    getGrowState(i) {\r\n        return this.growConfig[i];\r\n    }\r\n    setGrowState(i, growState, activeState) {\r\n        this.growConfig[i]['state'] = growState;\r\n        this.growConfig[i]['active'] = activeState;\r\n    }\r\n\r\n    // GET/SET light's heights. \r\n    getHeightState(i) {\r\n        return this.heightConfig[i];\r\n    }\r\n    setHeightState(i, height) {\r\n        this.heightConfig[i] = height; \r\n    }\r\n}\r\n\r\nexport default new LightConfigStore();","// Name: SequencerStore.js\r\n// Author: Amay Kataria. \r\n// Date: 03/03/2022\r\n// Description: A data store to keep track of all data coming from the sequencer\r\n// events from the central server. \r\n\r\nimport { LIGHT_STATE } from \"./LightConfigStore\";\r\nconst NUM_LIGHTS = 24;\r\n\r\nclass SequencerStore {\r\n    constructor() {\r\n        this.drawConfig = [];\r\n        this.indices = []; \r\n    }\r\n\r\n    getIndices() {\r\n        return this.indices;\r\n    }\r\n\r\n    setSequencerData(payload) {\r\n        this.indices = []; \r\n        let lightState = payload['state'];\r\n        if (lightState === 'NONE') {\r\n            // Turn off all the lights. \r\n            for (let i = 0; i < NUM_LIGHTS; i++) {\r\n                this.drawConfig[i] = LIGHT_STATE.OFF;\r\n            }\r\n            this.indices = []; \r\n        } else {\r\n            for (let i = 0; i < lightState.length; i++) {\r\n                // All data is in an array. \r\n                let s = lightState[i];\r\n                // Reset indices before\r\n                for (let j = 0; j < s.length; j++) {\r\n                    let idx = s[j]['idx'];\r\n                    let val = s[j]['val'];\r\n                    this.drawConfig[idx] = val; \r\n                    this.indices[j] = idx; \r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    clearConfig() {\r\n        this.drawConfig.length = 0;\r\n    }\r\n\r\n    getLightState(i) {\r\n        return this.drawConfig[i];\r\n    }\r\n}\r\n\r\nexport default new SequencerStore();","// Name: ModeStore.js\r\n// Author: Amay Kataria\r\n// Date: 04/13/2023\r\n// Description: This data store is responsible to store the current mode (Synth, Dream, Score, or Sweep)\r\n// that the installation is currently in.\r\n\r\nimport Websocket from \"../components/Websocket\";\r\n\r\n// Use these enum denominations throughout.\r\nexport const MODE = {\r\n    SYNTH: 0,\r\n    DREAM: 1, \r\n    SCORE: 2, \r\n    SWEEP: 3\r\n};\r\n\r\nclass ModeStore {\r\n    constructor() {\r\n        // What is the default mode? \r\n        this.currentMode = MODE.SYNTH; \r\n\r\n        // Fire this when the mode is changing or something is happenign.\r\n        this.subscribers = [];\r\n    }\r\n\r\n    subscribe(listener) {\r\n        this.subscribers.push(listener);\r\n    }\r\n\r\n    getCurrentMode() {\r\n        return this.currentMode; \r\n    }\r\n\r\n    setMode(newMode, commitToDb) {\r\n        if (this.currentMode !== newMode) {\r\n            // Set the mode\r\n            this.currentMode = newMode;\r\n    \r\n            // Let subscribers know new Bpm values are updated. \r\n            this.subscribers.forEach(l => {\r\n                l(newMode);\r\n            });\r\n            \r\n            if (commitToDb) {\r\n                // Commit this data to the database.\r\n                Websocket.commitModeData();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default new ModeStore(); ","// Name: SynthStore.js\r\n// Author: Amay Kataria\r\n// Date: 04/24/2023\r\n// Description: This data store is responsible to store, transmit, and receive \r\nimport Websocket from \"../components/Websocket\";\r\n\r\nclass SynthStore {\r\n    constructor() {\r\n        this.localSynthStack = []; \r\n        // Accumulated state from multiple clients.\r\n        this.socketState = '';\r\n    }\r\n\r\n    // Is the local state of this index the same as the socket state?\r\n    canModify(index) {\r\n        return this.localState[index] === this.socketState[index]; \r\n    }\r\n\r\n    setLocalNote(index, newValue) {\r\n        // Have I connected to the app? \r\n        if (this.socketState) {\r\n            // Socket config data\r\n            const socketConfigAtIndex = this.socketState[index];\r\n            const socketIdAtIndex = socketConfigAtIndex['socketId'];\r\n            const valueAtIndex = socketConfigAtIndex['val'];\r\n\r\n            // Current socketId\r\n            const socketId = Websocket.socketId; \r\n\r\n            // 0 -> 1\r\n            if (valueAtIndex === 0 && newValue === 1) {\r\n                // console.log('0 to 1');\r\n                const payload = [index, newValue, Websocket.socketId];\r\n                Websocket.sendSynthNote(JSON.stringify(payload));\r\n            }\r\n\r\n            // 1 -> 0\r\n            if ((valueAtIndex === 1) && (newValue === 0) && (socketId === socketIdAtIndex)) {\r\n                // console.log('1 to 0');\r\n                const payload = [index, newValue, Websocket.socketId];\r\n                Websocket.sendSynthNote(JSON.stringify(payload));\r\n            }\r\n        }\r\n    }\r\n\r\n    // New data that has been received from the socket.\r\n    setSynthNotes(data) {\r\n        // console.log(data);\r\n        this.socketState = data; \r\n        // console.log('Socket State: ' + this.socketState);\r\n    }\r\n\r\n    getLocalNote(index, value) {\r\n        return this.localState[index];\r\n    }\r\n\r\n    getSocketStateAtIndex(index) {\r\n        if (this.socketState) {\r\n            return this.socketState[index];\r\n        } else {\r\n            return null; \r\n        }\r\n    }\r\n}\r\n\r\nexport default new SynthStore(); ","// Name: FullDbConfigStore.js\n// Author: Amay Kataria. \n// Date: 04/25/2024\n// Description: A data store to store all the light config entries received from the supersynth database. \n\nimport Websocket from \"../components/Websocket\";\nclass FullDbConfigStore {\n    constructor() {\n        // An array of all the light configs received from the Database.\n        this.allLightConfigs = [];\n        this.allLightConfigsSubscriber = [];\n    }\n\n    getLightConfigs(callback) {\n        if (this.allLightConfigs.length > 0) {\n            callback();\n        } else {\n            this.allLightConfigsSubscriber.push(callback);\n            Websocket.fetchLightConfigs();\n        }\n    }\n\n    setLightConfigs(data) {\n        this.allLightConfigs = data; \n        if (this.allLightConfigsSubscriber.length > 0) {\n            this.allLightConfigsSubscriber.forEach(c => c());\n        }\n    }\n}\n\nexport default new FullDbConfigStore();","/*\r\n  Name: Websocket.js\r\n  Author: Amay Kataria\r\n  Date: 02/15/2022\r\n  Description: Class responsible for communication with the webserver. We use websockets\r\n  technology for this. Here we have the websocket client, which communicates with backend\r\n  server over websockets.\r\n*/\r\n\r\nimport io  from 'socket.io-client'\r\nimport BpmStore from '../stores/BpmStore';\r\nimport ConfigIndexStore from '../stores/ConfigIndexStore';\r\nimport LightConfigStore from '../stores/LightConfigStore';\r\nimport SequencerStore from '../stores/SequencerStore';\r\nimport ModeStore from '../stores/ModeStore';\r\nimport SynthStore from '../stores/SynthStore';\r\nimport FullDbConfigStore from '../stores/FullDbConfigStore';\r\n\r\n//const webURL = \"http://localhost:5000\";//Comment\r\nconst webURL = \"https://supersynth.herokuapp.com\";\r\n\r\nconst EVENT_SCORE_PAYLOAD = 'event_score_payload';\r\nconst EVENT_TIME = 'event_time';\r\nconst EVENT_FULL_PAYLOAD = 'event_full_payload';\r\nconst EVENT_SEQUENCER_PAYLOAD = 'event_sequencer_payload';\r\nconst EVENT_SOCKET_ID = 'event_socket_id';\r\n\r\n// SYNTH events\r\nconst EVENT_SYNTH_NOTES = 'event_synth_notes';\r\n\r\n// Mode events\r\nconst EVENT_MODE_PAYLOAD = 'event_mode_payload';\r\n\r\n// Database events\r\nconst EVENT_FULL_DATABASE_PAYLOAD = 'event_full_database_payload'; // Receives the entire database collection\r\n\r\nclass Websocket {\r\n  constructor() {\r\n      this.siteURL = webURL + '/app'; \r\n\r\n      this.socket = io(this.siteURL, {\r\n          reconnection: true,\r\n          reconnectionDelay: 500,\r\n          reconnectionAttempts: Infinity\r\n      });\r\n\r\n      // I know who I am.\r\n      this.socketId = ''; \r\n\r\n      this.socket.once('connect', this.subscribe.bind(this));\r\n  }\r\n\r\n  subscribe() {\r\n      console.log('Connected');\r\n      // Subscribe to incoming events from the webserver here. \r\n      this.socket.on(EVENT_TIME, this.logTime.bind(this));\r\n      // Show up when user starts interacting.\r\n      this.socket.on(EVENT_FULL_PAYLOAD, (payload) => {\r\n        this.processFullPayload(payload); \r\n      }); \r\n      // Shows the data when user is not interacting\r\n      this.socket.on(EVENT_SEQUENCER_PAYLOAD, data => {\r\n        SequencerStore.setSequencerData(data);\r\n      });\r\n      // Read the initial data about the Modes.\r\n      this.socket.on(EVENT_MODE_PAYLOAD, (currentMode) => {\r\n        ModeStore.setMode(currentMode, false);\r\n      });\r\n      this.socket.on(EVENT_SYNTH_NOTES, data => {\r\n        SynthStore.setSynthNotes(data);\r\n      });\r\n      this.socket.on(EVENT_FULL_DATABASE_PAYLOAD, data => {\r\n        FullDbConfigStore.setLightConfigs(data);\r\n      });\r\n      this.socket.on(EVENT_SOCKET_ID, data => {\r\n        this.socketId = data;\r\n        console.log('SocketId: ' + this.socketId);\r\n      })\r\n  }\r\n\r\n  // -------------------- DON'T CHANGE THESE -------------------    \r\n  disconnect() {\r\n      console.log('Socket Server Disconnected.');\r\n  }\r\n\r\n  logTime(data) {\r\n    // console.log('Socket Connection Alive: ' + data);\r\n  }\r\n\r\n  sendSynthNote(payload) {\r\n    this.socket.emit(EVENT_SYNTH_NOTES, payload);\r\n  }\r\n\r\n  commitModeData() {\r\n    // Store mode data to the database.\r\n    let currentMode = ModeStore.getCurrentMode();\r\n    this.socket.emit(EVENT_MODE_PAYLOAD, currentMode);\r\n  }\r\n\r\n  commitLightConfigData() {\r\n    // Extract data from stores. \r\n    let lightConfig = LightConfigStore.getActiveLightConfig();\r\n    let localBpm = BpmStore.getLocalBpm();\r\n    let configIndex = ConfigIndexStore.getConfigIndex() + 1; \r\n\r\n    // Create the JSON.\r\n    this.json = {};\r\n    this.json['bpm'] = localBpm; \r\n    this.json['lights'] = lightConfig; \r\n    this.json['time'] = Date(); \r\n\r\n    // Finalize payload\r\n    let payload = {\r\n      'index': configIndex,\r\n      'config': JSON.stringify(this.json)\r\n    };\r\n\r\n    // Emit payload.\r\n    this.socket.emit(EVENT_SCORE_PAYLOAD, payload);\r\n  }\r\n\r\n  processFullPayload(payload) {\r\n    // Config index. \r\n    let configIndex = payload['index'];\r\n    ConfigIndexStore.setConfigIndex(configIndex);\r\n\r\n    let config = payload['config'];\r\n\r\n    // Bpm.\r\n    let bpm = config['bpm'];\r\n    BpmStore.setDbBpm(bpm);\r\n\r\n    // Light config.\r\n    let lightConfig = config['lights'];\r\n    LightConfigStore.setLightConfig(lightConfig);\r\n\r\n    // Clear the current configuration so we can restart \r\n    // again. \r\n    SequencerStore.clearConfig();\r\n  }\r\n\r\n  fetchLightConfigs() {\r\n    this.socket.emit(EVENT_FULL_DATABASE_PAYLOAD);\r\n  }\r\n}\r\n\r\nexport default new Websocket();","/*\r\n  Name: Popup.js\r\n  Author: Amay Kataria\r\n  Date: 02/21/2022\r\n  Description: Popup component that is shown to display the about information. \r\n*/\r\n\r\nimport React from 'react'\r\nimport Radium from 'radium'\r\nimport { color, padding, fontFamily, fontSize } from './CommonStyles.js'\r\nimport { ReactComponent as Exit } from '../svg/close.svg'\r\nimport { fadeOutUp, fadeOutDown, fadeInDown, fadeInUp } from 'react-animations'\r\nimport EditModeStore from '../stores/EditModeStore.js'\r\nimport Websocket from './Websocket.js'\r\nimport TimerStore from '../stores/TimerStore.js'\r\n\r\n// Maintain the current popup state (to track animations)\r\nvar PopupState = {\r\n    Open: 0,\r\n    Close: 1,\r\n    None: 2\r\n}; \r\n\r\nexport var PopupType = {\r\n    About: 0,\r\n    Send: 1,\r\n    Score: 2\r\n}\r\n\r\n// Custom Fade in animation. \r\nconst customFadeIn = Radium.keyframes({\r\n    from: {\r\n        opacity: '0'\r\n    },\r\n    to: {\r\n        opacity: '0.5'\r\n    }\r\n}, 'fadesIn'); \r\n\r\nconst customFadeOut = Radium.keyframes({\r\n    from: {\r\n        opacity: '0.5'\r\n    },\r\n    to: {\r\n        opacity: '0'\r\n    }\r\n}, 'fadesOut'); \r\n\r\nconst fadeInDuration = '0.5s'; \r\nconst slideInDuration = '1.0s'; \r\nconst fadeOutDuration = '0.5s';\r\n\r\nconst aboutTheWork = 'Supersynthesis is an interactive audio-visual art installation that invites people to create a space for collective expression and participation. Accompanied with a physical installation, it utilizes the medium of light and sound to craft a communal experience where the audience activates the piece and the space around it by interacting with it through an online interface. Every audience input is blended into the previous response, thus synthesizing a progressively evolving wave of expression. In an increasingly fragmented society, this project aspires to create an inclusive space, where anybody can leave a trace of their thought with freedom. By participating in Supersynthesis, one becomes part of a communal wave that’ll anonymously accumulate until the forthcoming eternity.';\r\nconst styles={\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: '0px',\r\n        bottom: '0px',\r\n        left: '0px',\r\n        right: '0px',\r\n        background: color.bgBlack,\r\n        zIndex: '999'\r\n    },\r\n\r\n    fadeIn: {\r\n        animationName: customFadeIn,\r\n        animationDuration: fadeInDuration,\r\n        animationFillMode: 'forwards',\r\n        animationTimingFunction:'ease-in'\r\n    },\r\n    \r\n    fadeOut: {\r\n        animationName: customFadeOut,\r\n        animationDuration: fadeOutDuration,\r\n        animationFillMode: 'forwards',\r\n        animationTimingFunction: 'ease-out'\r\n    },\r\n\r\n    fadeOutUp: {\r\n        animationName: Radium.keyframes(fadeOutUp, 'fadeOutUp'),\r\n        animationDuration: fadeOutDuration,\r\n        animationFillMode: 'forwards',\r\n        animationTimingFunction: 'ease-out'\r\n    },\r\n\r\n    fadeOutDown: {\r\n        animationName: Radium.keyframes(fadeOutDown, 'fadeOutDown'),\r\n        animationDuration: fadeOutDuration,\r\n        animationFillMode: 'forwards',\r\n        animationTimingFunction: 'ease-out'\r\n    },\r\n\r\n    fadeInDown: {\r\n        animationName: Radium.keyframes(fadeInDown, 'fadeInDown'),\r\n        animationDuration: slideInDuration,\r\n        animationFillMode: 'forwards',\r\n        animationTimingFunction: 'ease-in'\r\n    },\r\n\r\n    fadeInUp: {\r\n        animationName: Radium.keyframes(fadeInUp, 'fadeInUp'),\r\n        animationDuration: slideInDuration,\r\n        animationFillMode: 'forwards',\r\n        animationTimingFunction: 'ease-in'\r\n    },\r\n\r\n    showOverlay: {\r\n        zIndex: '998',\r\n        opacity: '1'\r\n    },\r\n\r\n    hideOverlay: {\r\n        zIndex: '-998',\r\n        opacity: '0'\r\n    },\r\n\r\n    showContent: {\r\n        zIndex: '999',\r\n        opacity: '1'\r\n    },\r\n\r\n    hideContent: {\r\n        zIndex: '-999',\r\n        opacity: '0'\r\n    },\r\n\r\n    contentContainer: {\r\n        position: 'fixed',\r\n        zIndex: '-999',\r\n        left: '0px',\r\n        top:'0px',\r\n        bottom: '0px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100%',\r\n        width: '100%',\r\n    },\r\n\r\n    content: {\r\n        borderRadius: fontSize.tiny,\r\n        overflow: 'auto',\r\n        maxWidth: 'calc(100% - 50px)', // Bind this to media query\r\n        maxHeight: 'calc(100% - 100px)', // Bind this to media query\r\n        \r\n        '@media (min-width: 600px)': {      \r\n            maxWidth: 'calc(100% - 100px)', // Bind this to media query\r\n            maxHeight: 'calc(100% - 100px)', // Bind this to media query\r\n        },\r\n\r\n        '@media (min-width: 750px)': {  \r\n            maxWidth: 'calc(100% - 150px)', // Bind this to media query\r\n            maxHeight: 'calc(100% - 100px)', // Bind this to media query\r\n        },\r\n\r\n        '@media (min-width: 1200px)' : {\r\n            maxWidth: 'calc(100% - 300px)', // Bind this to media query\r\n            maxHeight: 'calc(100% - 100px)', // Bind this to media query\r\n        }\r\n    },\r\n\r\n    stretchContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        background: color.bgBlack,\r\n        color: color.fgWhite,\r\n        paddingLeft: padding.small, // Bind this to media query\r\n        paddingRight: padding.small, // Bind this to media query,\r\n\r\n        '@media (min-width: 600px)': {      \r\n            paddingLeft: padding.extraHuge, \r\n            paddingRight: padding.extraHuge\r\n        },\r\n\r\n        '@media (min-width: 900px)': {  \r\n            paddingLeft: padding.veryMassive, \r\n            paddingRight: padding.veryMassive\r\n        },\r\n\r\n        '@media (min-width: 1200px)' : {\r\n            paddingLeft: padding.extraMassive, \r\n            paddingRight: padding.extraMassive\r\n        },\r\n        opacity: '1.0',\r\n        borderStyle: 'solid',\r\n        borderWidth: '2px',\r\n        borderColor: color.fgWhite\r\n    },\r\n\r\n    title: {\r\n        marginTop: padding.lessSmall,\r\n        marginBottom: padding.small,\r\n        textAlign: 'center',\r\n        fontFamily: fontFamily.heatwave,\r\n        fontSize: fontSize.extraBig,\r\n        letterSpacing: '2.5px',\r\n        lineHeight: '1.8',\r\n       \r\n        '@media (min-width: 750px)': {  \r\n            fontSize: fontSize.extraBig\r\n        },\r\n\r\n        '@media (min-width: 900px)': {  \r\n            fontSize: fontSize.huge\r\n        },\r\n\r\n        '@media (min-width: 1200px)' : {\r\n            fontSize: fontSize.veryHuge\r\n        }\r\n    },\r\n\r\n    sendTitle: {\r\n        marginTop: padding.small,\r\n        textAlign: 'center',\r\n        fontFamily: fontFamily.heatwave,\r\n        fontSize: fontSize.extraBig,\r\n        letterSpacing: '2.5px',\r\n\r\n        '@media (min-width: 750px)': {  \r\n            fontSize: fontSize.extraBig\r\n        },\r\n\r\n        '@media (min-width: 900px)': {  \r\n            fontSize: fontSize.huge\r\n        },\r\n\r\n        '@media (min-width: 1200px)' : {\r\n            fontSize: fontSize.veryHuge\r\n        }\r\n    },\r\n\r\n    subtitle: {\r\n        marginBottom: padding.lessBig,\r\n        textAlign: 'center',\r\n        fontFamily: fontFamily.heatwave,\r\n        fontSize: fontSize.verySmall,\r\n        letterSpacing: '2.5px',\r\n       \r\n        '@media (min-width: 750px)': {  \r\n            fontSize: fontSize.lessSmall\r\n        },\r\n\r\n        '@media (min-width: 900px)': {  \r\n            fontSize: fontSize.small\r\n        },\r\n\r\n        '@media (min-width: 1200px)' : {\r\n            fontSize: fontSize.small\r\n        }\r\n    },\r\n\r\n    buttonContainer: {\r\n        display: 'flex',\r\n        flexContainer: 'row',\r\n        marginTop: padding.extraSmall,\r\n        marginBottom: padding.big,\r\n        justifyContent: 'space-evenly'\r\n    },\r\n\r\n    button: {\r\n        background: color.fgWhite,\r\n        padding: padding.verySmall,\r\n        color: color.bgBlack,\r\n        fontFamily: fontFamily.heatwave,\r\n        letterSpacing: '2.5px',\r\n        fontSize: fontSize.small,\r\n               \r\n        '@media (min-width: 750px)': {  \r\n            fontSize: fontSize.lessBig\r\n        },\r\n\r\n        '@media (min-width: 900px)': {  \r\n            fontSize: fontSize.big\r\n        },\r\n\r\n        '@media (min-width: 1200px)' : {\r\n            fontSize: fontSize.veryBig\r\n        }\r\n    },\r\n\r\n    body: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        fontFamily: fontFamily.josefin,\r\n        letterSpacing: '1.5px',\r\n        fontSize: fontSize.small,\r\n        color: color.fgWhite\r\n    },\r\n\r\n    // Applied on stuff\r\n    mediaQueryOnText: {\r\n        '@media (min-width: 750px)': {  \r\n            fontSize: fontSize.big\r\n        },\r\n\r\n        '@media (min-width: 900px)': {  \r\n            fontSize: fontSize.veryBig\r\n        }\r\n    },\r\n\r\n    iconContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        alignSelf: 'flex-end',\r\n        marginRight: '-' + fontSize.verySmall,\r\n        height: fontSize.big,\r\n        width: fontSize.big,\r\n        fill: color.fgWhite,\r\n\r\n        '@media (min-width: 600px)': {  \r\n            marginRight: '-' + fontSize.extraInsane,\r\n            height: fontSize.veryBig, \r\n            width: fontSize.veryBig\r\n        },\r\n\r\n        '@media (min-width: 900px)': {  \r\n            height: fontSize.extraBig, \r\n            width: fontSize.extraBig,\r\n            marginRight: '-108px'\r\n        },\r\n\r\n        '@media (min-width: 1200px)': {  \r\n            marginRight: '-124px'\r\n        }\r\n    },\r\n\r\n    icon: { \r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n\r\n    footerContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginTop: padding.veryBig,\r\n        fontFamily: fontFamily.josefin,\r\n        letterSpacing: '1.5px',\r\n    },\r\n\r\n    footer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginTop: padding.verySmall,\r\n        fontSize: fontSize.lessSmall,\r\n        '@media (min-width: 750px)': {  \r\n            fontSize: fontSize.small,\r\n        }\r\n    },\r\n\r\n    copyright: {\r\n        marginTop: padding.veryBig,\r\n        fontSize: fontSize.verySmall,\r\n        marginBottom: padding.small\r\n    },\r\n\r\n    link: {\r\n        backgroundColor: color.fgWhite,\r\n        color: color.bgBlack,\r\n        padding: padding.tiny\r\n    }\r\n}\r\n\r\nclass Popup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            isVisible: false,\r\n            popupState: PopupState.None,\r\n            popupType: PopupType.About\r\n        };\r\n\r\n        this.content = React.createRef(); \r\n    }\r\n\r\n    render() {\r\n        // Handle overlay styles. \r\n        let overlayStyle; \r\n        if (this.state.isVisible) {\r\n            overlayStyle = [styles.overlay, styles.showOverlay]; \r\n            if (this.state.popupState === PopupState.Open) {\r\n                overlayStyle = [overlayStyle, styles.fadeIn]; \r\n            } else if (this.state.popupState === PopupState.Close) {\r\n                overlayStyle = [overlayStyle, styles.fadeOut]; \r\n            } else {\r\n                // Do nothing. \r\n            }\r\n        } else {\r\n            overlayStyle = [styles.overlay, styles.hideOverlay]; \r\n        }\r\n\r\n        // Handle different types of Popups. \r\n        let content, contentContainerStyle; \r\n        if (this.state.popupType === PopupType.About) {\r\n            content = this.getAboutContent();\r\n        } else if (this.state.popupType === PopupType.Send) {\r\n            content = this.getSendContent(); \r\n        } else {\r\n            content = this.getScoreContent();\r\n        }\r\n\r\n        if (this.state.isVisible) {\r\n            contentContainerStyle = [styles.contentContainer, styles.showContent]; \r\n            if (this.state.popupState === PopupState.Open) {\r\n                contentContainerStyle = [contentContainerStyle, styles.fadeInDown]; \r\n            } else if (this.state.popupState === PopupState.Close) {\r\n                contentContainerStyle = [contentContainerStyle, styles.fadeOutUp];\r\n            } else {\r\n                // Do nothing when it's in None state. \r\n            }\r\n        } else {\r\n            contentContainerStyle = [styles.contentContainer, styles.hideContent]; \r\n        }\r\n\r\n        return (\r\n            <div onClick={this.handleOnTouch.bind(this)} onTouchStart={this.handleOnTouch.bind(this)} >\r\n                <div style={overlayStyle}></div>\r\n                <div onAnimationEnd={this.contentAnimationEnd.bind(this)} style={contentContainerStyle}>\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    contentAnimationEnd() {\r\n        if (this.state.isVisible) {\r\n            // Hide everything when content animation ends. \r\n            if (this.state.popupState === PopupState.Close) {\r\n                this.setState({\r\n                    isVisible: false,\r\n                    popupState: PopupState.None\r\n                }); \r\n            }\r\n        }\r\n    }\r\n\r\n    getIconButton() {\r\n        return(\r\n            <div onClick={this.hidePopup.bind(this)} style={styles.iconContainer}>\r\n                <Exit style={styles.icon} />\r\n            </div>\r\n        ); \r\n    }\r\n\r\n    getSendContent() { \r\n        let bodyStyle = [styles.body, styles.mediaQueryOnText];\r\n        let iconButton = this.getIconButton();  \r\n        return (\r\n            <div ref={this.content} style={styles.content}>\r\n                <div style={styles.stretchContainer}>\r\n                    { iconButton }\r\n                    <div style={bodyStyle}>\r\n                        <div style={styles.sendTitle}>SEND</div>\r\n                        <div style={styles.subtitle}>supersynthesis</div>       \r\n                        <div style={styles.buttonContainer}>\r\n                            <div onClick={this.onYesHandle.bind(this)} style={styles.button}>yes</div>\r\n                            <div onClick={this.onNoHandle.bind(this)} style={styles.button}>no</div>    \r\n                        </div>         \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getScoreContent() { \r\n        let bodyStyle = [styles.body, styles.mediaQueryOnText];\r\n        let iconButton = this.getIconButton();  \r\n        return (\r\n            <div ref={this.content} style={styles.content}>\r\n                <div style={styles.stretchContainer}>\r\n                    { iconButton }\r\n                    <div style={bodyStyle}>\r\n                        <div style={styles.sendTitle}>SCORE</div>\r\n                        <div style={bodyStyle}>\r\n                            <div style={styles.subtitle}>supersynthesis</div>\r\n                            <div style={styles.subtitle}>{'Touch To Create A Score'}<br />{'Hit SEND'}</div>                               \r\n                        </div>\r\n                        <div style={styles.buttonContainer}>\r\n                            <div onClick={this.onNoHandle.bind(this)} style={styles.button}>ok</div>\r\n                        </div>         \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getAboutContent() {\r\n        let footer = this.getFooter(); \r\n        let iconButton = this.getIconButton();  \r\n        let bodyStyle = [styles.body, styles.mediaQueryOnText];\r\n        return (\r\n            <div ref={this.content} style={styles.content}>\r\n                <div style={styles.stretchContainer}>\r\n                    { iconButton }\r\n                    <div style={bodyStyle}>\r\n                        <div style={styles.title}>supersynthesis</div>\r\n                        <div style={styles.description}>{aboutTheWork}</div>                        \r\n                    </div>\r\n                    { footer }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getFooter() {\r\n        const tim = 'https://timkwasny96.wixsite.com/site';\r\n        const amay = 'https://amaykataria.com';\r\n        return (\r\n            <div style={styles.footerContainer}>\r\n                <div style={styles.footer}>\r\n                    <span>Created by&nbsp;</span>\r\n                    <a \r\n                        style={styles.link} \r\n                        target='_blank' \r\n                        rel=\"noopener noreferrer\" \r\n                        href={amay}>\r\n                        Amay Kataria\r\n                    </a>\r\n                </div>\r\n                <div style={styles.footer}>\r\n                    <span>Sound by&nbsp;</span>\r\n                    <a \r\n                        style={styles.link} \r\n                        target='_blank' \r\n                        rel=\"noopener noreferrer\" \r\n                        href={tim}>\r\n                        Timothy Kwasny\r\n                    </a>\r\n                </div>\r\n                <div style={styles.copyright}>© Amay Kataria 2022</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onYesHandle(event) {\r\n        event.stopPropagation();\r\n        TimerStore.cancelReset();\r\n        EditModeStore.setEditMode(false);\r\n        EditModeStore.setUserInteracting(false);\r\n        this.hidePopup(event);\r\n        // Send the data. \r\n        Websocket.commitLightConfigData();\r\n    }\r\n\r\n    onNoHandle(event) {\r\n        event.stopPropagation();\r\n        EditModeStore.setUserInteracting(false);\r\n        this.hidePopup(event);\r\n    }\r\n\r\n    showPopup(popupType) {\r\n        console.log('Create a popup: ' + popupType);\r\n\r\n        // Adjust the scroll top.\r\n        this.content.current.scrollTop = 0; \r\n        this.setState({\r\n            isVisible: true,\r\n            popupState: PopupState.Open,\r\n            popupType: popupType\r\n        }); \r\n\r\n        // Force the user interaction to be false because we get stuck sometime in it. \r\n        EditModeStore.setIsPopupActive(true);\r\n        EditModeStore.setUserInteracting(false);\r\n    }\r\n\r\n    hidePopup(event) {\r\n        EditModeStore.setIsPopupActive(false);\r\n        if (event) {\r\n            event.stopPropagation(); \r\n        }\r\n        this.setState({\r\n            popupState: PopupState.Close\r\n        });\r\n    }\r\n\r\n    handleOnTouch(event) {\r\n        // Don't let this propogate to the main screen\r\n        // where touch events mean something. \r\n        event.stopPropagation();\r\n    }\r\n }\r\n\r\nexport default Radium(Popup);\r\n\r\n","var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from \"react\";\nconst SvgAbout = _ref => {\n  let {\n    svgRef,\n    title,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"28px\",\n    height: \"28px\",\n    viewBox: \"0 0 28 28\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group-Copy\",\n    transform: \"translate(0.5 0.5)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group\",\n    transform: \"translate(0 0.0012207031)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0L26.8571 0L26.8571 26.5126L0 26.5126L0 0Z\",\n    id: \"Rectangle\",\n    fill: \"#FFFFFF\",\n    fillRule: \"evenodd\",\n    stroke: \"#000000\",\n    strokeWidth: 1\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.68323 11.5706L8.53964 11.5706L8.53964 15.4269L4.68323 15.4269L4.68323 11.5706Z\",\n    id: \"Rectangle-49-Copy\",\n    fill: \"#000000\",\n    fillRule: \"evenodd\",\n    stroke: \"none\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.0839 0L26.8568 0L26.8568 26.5126L13.0839 26.5126L13.0839 0Z\",\n    id: \"Rectangle-2\",\n    fill: \"#000000\",\n    fillRule: \"evenodd\",\n    stroke: \"none\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.1803 11.5703L22.0367 11.5703L22.0367 15.4267L18.1803 15.4267L18.1803 11.5703Z\",\n    id: \"Rectangle-49\",\n    fill: \"#FFFFFF\",\n    fillRule: \"evenodd\",\n    stroke: \"none\"\n  }))));\n};\nconst ForwardRef = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(SvgAbout, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/about.ea00a3b0.svg\";\nexport { ForwardRef as ReactComponent };","/*\r\n  Name: BottomBar.js\r\n  Author: Amay Kataria\r\n  Date: 02/19/2022\r\n  Description: React component for the top navigation bar on the webpage.\r\n*/\r\nimport React from 'react'\r\nimport Radium from 'radium'\r\nimport { PopupType } from './Popup'\r\nimport Popup from './Popup'\r\nimport { ORIENTATION } from './App'\r\nimport { ReactComponent as About } from '../svg/about.svg'\r\nimport {color, fontFamily, fontSize, padding} from './CommonStyles'\r\nimport EditModeStore from '../stores/EditModeStore'\r\nimport TimerStore from '../stores/TimerStore'\r\n\r\nconst animation = {\r\n  rotate: Radium.keyframes({\r\n    '0%': {\r\n      transform: 'rotate(0deg)'\r\n    },\r\n    '50%': {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    '100%': {\r\n      transform: 'rotate(360deg)',\r\n    }\r\n  }),\r\n}\r\n\r\nconst styles = {\r\n    container: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        outline: 'none',\r\n        paddingLeft: padding.small,\r\n        paddingRight: padding.small,\r\n        zIndex: '1'\r\n    },\r\n\r\n    title: {\r\n        backgroundColor: color.bgBlack,\r\n        color: color.fbWhite,\r\n        padding: padding.small,\r\n        fontFamily: fontFamily.heatwave,\r\n        fontSize: fontSize.lessBig,\r\n        letterSpacing: '2px'\r\n    },\r\n    \r\n    iconContainer: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      width: fontSize.huge,\r\n      height: fontSize.huge,\r\n      marginTop: padding.kindaSmall,\r\n    },\r\n\r\n    simpleRotation: {\r\n      animation: 'x 30s ease-in-out infinite',\r\n      animationName: animation.rotate\r\n    },\r\n  \r\n    icon: {\r\n        width: '100%',\r\n        height: '100%'\r\n    }\r\n};\r\n\r\nclass Navbar extends React.Component {\r\n  constructor(props) {\r\n    super(props); \r\n    this.state={}\r\n    this.popupRef = React.createRef(); \r\n  }\r\n\r\n  componentDidMount() {\r\n    TimerStore.subscribePopup(this.onShowPopup.bind(this)); \r\n    TimerStore.subscribeReset(this.onReset.bind(this));\r\n  }\r\n\r\n  onShowPopup(popupType) \r\n  {\r\n    // Send popup type. \r\n    this.popupRef.current.showPopup(popupType);\r\n    console.log('Show Poppup');\r\n  }\r\n\r\n  onReset() {\r\n    EditModeStore.setEditMode(false);\r\n    EditModeStore.setUserInteracting(false);\r\n    let curPopupType = this.popupRef.current.state.popupType; \r\n    if (curPopupType === PopupType.Send) {\r\n      this.popupRef.current.hidePopup();\r\n    } else {\r\n      // Don't close the popup.\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let aboutStyle = [styles.iconContainer, styles.simpleRotation];\r\n    let heightStyle = this.getHeightStyle(); \r\n    return (\r\n      <div style={styles.block}>\r\n        <Popup ref={this.popupRef}/>\r\n        <div style={[styles.container, heightStyle]}>\r\n          <div style={styles.title}>supersynthesis</div>\r\n          <div style={aboutStyle} onClick={this.handleAbout.bind(this)}>\r\n            <About style={styles.icon} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getHeightStyle() {\r\n    let height = this.getHeight();\r\n    let heightStyle = {\r\n      height: height + 'px'\r\n    };\r\n    return heightStyle; \r\n  }\r\n\r\n  getHeight() {\r\n    let deviceHeight = window.innerHeight;\r\n    let deviceWidth = window.innerWidth; \r\n    let c = 0; \r\n    if (this.props.orientation === ORIENTATION.PORTRAIT) {\r\n      if (deviceHeight < 900) {\r\n        c = 0.1\r\n      }\r\n\r\n      if (deviceHeight > 900 && deviceHeight < 1000) {\r\n        c = 0.075\r\n      }\r\n\r\n      if (deviceHeight > 1000) {\r\n        c = 0.06\r\n      }\r\n    }\r\n\r\n    if (this.props.orientation === ORIENTATION.LANDSCAPE) {\r\n      if (deviceWidth < 1000) {\r\n        c = 0.15; \r\n      }      \r\n\r\n      if (deviceWidth > 1000) {\r\n        c = 0.09\r\n      }\r\n    }\r\n\r\n    return deviceHeight * c; \r\n  }\r\n\r\n  handleAbout() {\r\n    this.popupRef.current.showPopup(PopupType.About);\r\n  }\r\n}\r\n\r\nexport default Radium(Navbar);\r\n","// Name: TouchStore.js\r\n// Author: Amay Kataria. \r\n// Date: 05/2/2023\r\n// Description: A simple data store that registers an array of all touch events that are\r\n// registered in the application. This is exclusively useful to implement the synth mode. \r\n\r\nclass TouchStore {\r\n    constructor() {\r\n        this.touches = []; \r\n    }\r\n\r\n    setTouches(newTouches) {\r\n        this.touches = newTouches; \r\n    }\r\n\r\n    getTouches() {\r\n        return this.touches;\r\n    }\r\n}\r\n\r\nexport default new TouchStore();","/*\r\n  Name: Light.js\r\n  Author: Amay Kataria\r\n  Date: 02/19/2022\r\n  Description: A class representing each light that is painted on the canvas. \r\n*/\r\nimport LightConfigStore, { LIGHT_STATE, GROW_STATE } from \"../stores/LightConfigStore\";\r\nimport SequencerStore from '../stores/SequencerStore';\r\nimport EditModeStore from \"../stores/EditModeStore\";\r\nimport TouchStore from '../stores/TouchStore'\r\nimport ModeStore, { MODE } from \"../stores/ModeStore\";\r\nimport SynthStore from \"../stores/SynthStore\";\r\n\r\nexport default class Light {\r\n    constructor(s, i, xPos, yPos, lightWidth) {\r\n        // Sketch object. \r\n        this.p5 = s; \r\n\r\n        // Light's width. \r\n        this.lightWidth = lightWidth;\r\n\r\n        this.growFactor = this.p5.random(1.5, 2.5);\r\n\r\n        // Origin point at the bottom of the canvas. \r\n        this.pos = this.p5.createVector(xPos, yPos);\r\n        \r\n        // Point at the top. \r\n        let newX = this.getNewPos() + this.lightWidth/2; // Keep this at the center of the light.\r\n        this.topPos = this.p5.createVector(newX, 0); // By default at the top. (Always changing)\r\n        this.top = this.p5.createVector(newX, 0); \r\n        \r\n        // Colors. \r\n        this.lightActiveColor = this.p5.color('white');\r\n        this.lightInactiveColor = this.p5.color(255, 255, 255, 125);\r\n        this.lightBgColor = this.p5.color(255, 255, 255, 30);\r\n        this.lightPointColor = this.p5.color('green'); // Only debug.\r\n\r\n        // Store the current light config. \r\n        this.curIdx = i; \r\n        this.updateHeight(); \r\n\r\n        // Variable for the timer's interval id. \r\n        this.growIntervalId = ''; \r\n        setInterval(this.randomizeGrowState.bind(this), 500); \r\n    }\r\n\r\n    draw(meshEllipsePos, boundaryWidth) {\r\n        const currentMode = ModeStore.getCurrentMode();\r\n        let newX = this.getNewPos();\r\n        this.p5.noStroke();  \r\n        this.p5.fill(this.lightInactiveColor);\r\n        \r\n        // All the light business for synth.\r\n        if (currentMode === MODE.SYNTH) {    \r\n            const noteActive = this.analyseTouch(newX);\r\n            if (noteActive) {\r\n                SynthStore.setLocalNote(this.curIdx, 1); \r\n            } else {\r\n                SynthStore.setLocalNote(this.curIdx, 0); \r\n            }\r\n\r\n            // Get the colors based on socket data\r\n            const socketStateAtIndex = SynthStore.getSocketStateAtIndex(this.curIdx);\r\n            if (socketStateAtIndex) {\r\n                const val = socketStateAtIndex['val'];\r\n                if (val) {\r\n                    this.p5.fill(this.lightActiveColor);\r\n                } else {\r\n                    this.p5.fill(this.lightInactiveColor);\r\n                }\r\n            }\r\n              \r\n            this.p5.rect(newX, this.pos['y'], this.lightWidth, -this.p5.height); \r\n        }\r\n\r\n        if (currentMode === MODE.SCORE || currentMode === MODE.DREAM || currentMode === MODE.SWEEP) {\r\n            // Draw the background lights.\r\n            this.p5.fill(this.lightBgColor);        \r\n            this.p5.rect(newX, this.pos['y'], this.lightWidth, -this.p5.height);  \r\n\r\n            let isEditMode = EditModeStore.isEditMode; \r\n            // This is great logic for scoring and other things. Right now I need to figure \r\n            // out the logic for the keyboard.\r\n            // NOTE: Commenting this out briefly.\r\n            if (isEditMode) {\r\n                this.updateLight(meshEllipsePos, boundaryWidth);            \r\n                // Draw the actual light. \r\n                let height = this.getHeight();\r\n                this.p5.fill(this.lightActiveColor);\r\n                this.p5.rect(newX, this.pos['y'], this.lightWidth, -height);  \r\n            } else {\r\n                // Draw the actual lights from the DB config that are lighting. \r\n                if (this.isOnFromDb()  || ModeStore.getCurrentMode() === MODE.SWEEP) {\r\n                    this.p5.fill(this.lightInactiveColor);\r\n                    this.p5.rect(newX, this.pos['y'], this.lightWidth, -this.p5.height);\r\n                }\r\n\r\n                // Draw the lights from the db config that should be on. \r\n                if (this.canDraw()) {\r\n                    // Draw full light.\r\n                    this.p5.fill(this.lightActiveColor);\r\n                    this.p5.rect(newX, this.pos['y'], this.lightWidth, -this.p5.height);  \r\n                }\r\n            }\r\n        }\r\n        //this.drawLightPoint();\r\n    }\r\n\r\n    // Test if the current touch is activating the a light.\r\n    analyseTouch(newX) {\r\n        const touches = TouchStore.getTouches();\r\n        if (touches.length > 0) {\r\n            for(let i = 0; i < touches.length; i++) {\r\n                if (touches[i].x > newX && touches[i].x < (newX + this.lightWidth)) {\r\n                    return true;\r\n                }\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    updateLight(meshEllipsePos, boundaryWidth) {\r\n        let isUserInteracting = EditModeStore.isUserInteracting;\r\n        if (isUserInteracting) {\r\n            let dBottomPos = meshEllipsePos.dist(this.pos);\r\n            let dTopPos = meshEllipsePos.dist(this.top);\r\n            if (dBottomPos < boundaryWidth/2 || dTopPos < boundaryWidth/2) {\r\n                // This light is activated, grow or shrink. \r\n                this.updateGrowState();\r\n            }\r\n        }\r\n\r\n        this.handleGrowState();\r\n    }\r\n\r\n    \r\n    updateGrowState() {\r\n        let curLightState = LightConfigStore.getActiveLightState(this.curIdx);\r\n        let curGrowState = LightConfigStore.getGrowState(this.curIdx); \r\n\r\n        // Is the light on? \r\n        if (curLightState === LIGHT_STATE.ON) {\r\n            // Is this light currently growing or shrinking? \r\n            if (curGrowState['active']) {\r\n                // I'm doing something - let's not do anything. \r\n            } else {\r\n                // Is the state set to shrink? Because it can only shrink. \r\n                if (curGrowState['state'] === GROW_STATE.SHRINK) {\r\n                    LightConfigStore.setGrowState(this.curIdx, GROW_STATE.SHRINK, true);\r\n                    // This light will not be turned on anymore.  \r\n                    LightConfigStore.setActiveLightState(this.curIdx, LIGHT_STATE.OFF);                \r\n                } else {\r\n                    // Pass, we can't grow a light that's already on. \r\n                }\r\n            }\r\n        }\r\n\r\n        if (curLightState === LIGHT_STATE.OFF) {\r\n            if (curGrowState['active']) {\r\n                // I'm doing something - let's not do anything. \r\n            } else {\r\n                if (curGrowState['state'] === GROW_STATE.GROW) {\r\n                    LightConfigStore.setGrowState(this.curIdx, GROW_STATE.GROW, true);\r\n                    // This light will not be turned on anymore.  \r\n                    LightConfigStore.setActiveLightState(this.curIdx, LIGHT_STATE.ON);\r\n                } else {\r\n                    // Pass, we can't shrink a light that's already off. \r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    // Grow & Shrink the height of the light.\r\n    handleGrowState() {\r\n        let curGrowthActive = this.getGrowState()['active'];\r\n        let curGrowState = this.getGrowState()['state'];\r\n        let curHeight = this.getHeight();\r\n\r\n        // Is the current light's grow active? \r\n        if (curGrowthActive) {\r\n            switch (curGrowState) {\r\n                case GROW_STATE.NONE: {\r\n                    // Pass don't do antyhing. \r\n                    break;\r\n                }\r\n    \r\n                case GROW_STATE.GROW: {\r\n                    if (curHeight < this.p5.height) {\r\n                        curHeight += this.growFactor;\r\n                        LightConfigStore.setHeightState(this.curIdx, curHeight);\r\n                        this.mapPos(curHeight);\r\n                    } else {\r\n                        // Deactivate the current light. \r\n                        LightConfigStore.setGrowState(this.curIdx, GROW_STATE.NONE, false);\r\n                    }\r\n                    break;\r\n                }\r\n    \r\n                case GROW_STATE.SHRINK: {\r\n                    if (curHeight > 0) {\r\n                        curHeight -= this.growFactor; \r\n                        LightConfigStore.setHeightState(this.curIdx, curHeight);\r\n                        this.mapPos(curHeight);\r\n                    } else {\r\n                        // Deactivate the current light. \r\n                        LightConfigStore.setGrowState(this.curIdx,  GROW_STATE.NONE, false);\r\n                    }\r\n                    break;\r\n                }\r\n    \r\n                default: \r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    \r\n    // Set light heights based on the light configurations.\r\n    // Call this functions when new configs are received. \r\n    updateHeight() {\r\n        let lightState = LightConfigStore.getActiveLightState(this.curIdx);         \r\n        let onHeight = this.p5.height;\r\n        let offHeight = 0;\r\n\r\n        if (lightState === LIGHT_STATE.ON) {\r\n            LightConfigStore.setHeightState(this.curIdx, onHeight);\r\n        }\r\n\r\n        if (lightState === LIGHT_STATE.OFF) {\r\n            LightConfigStore.setHeightState(this.curIdx, offHeight);\r\n        }\r\n    }\r\n\r\n    mapPos( height) {\r\n        this.topPos['y'] = this.p5.map(height, 0, this.p5.height, this.p5.height, 0);\r\n    }\r\n\r\n    drawLightPoint() {\r\n        let newX = this.getNewPos();\r\n        this.p5.fill(this.lightPointColor)\r\n        this.p5.circle(newX, this.pos['y'], 5);\r\n    }\r\n    \r\n    getNewPos() {\r\n        return this.pos['x'] + this.lightWidth/2; \r\n    }\r\n\r\n    getGrowState() {\r\n        return LightConfigStore.getGrowState(this.curIdx);\r\n    }\r\n\r\n    getHeight() {\r\n        let heightState = LightConfigStore.getHeightState(this.curIdx);\r\n        return heightState;\r\n    }\r\n\r\n    canDraw() {\r\n        let drawState = SequencerStore.getLightState(this.curIdx);\r\n        return drawState; // It's true or false. \r\n    }\r\n\r\n    isOn() {\r\n        let lightState = LightConfigStore.getActiveLightState(this.curIdx);\r\n        return lightState; \r\n    }\r\n\r\n    isOnFromDb() {\r\n        let lightState = LightConfigStore.getDbLightState(this.curIdx);\r\n        return lightState; \r\n    }\r\n\r\n    isGrowing() {\r\n        let v = LightConfigStore.getGrowState(this.curIdx)['active'];\r\n        return v;\r\n    }\r\n\r\n    updateDrawState(state) {\r\n        LightConfigStore.setDrawState(this.curIdx, state); \r\n    }\r\n\r\n    randomizeGrowState() {\r\n        let calcGrowState = () => {\r\n            let curGrowState = this.getGrowState(); \r\n            if (curGrowState['active']) {                \r\n                // I'm currently growing or doing something. \r\n                // Pass\r\n            } else {\r\n                // Update my state. \r\n                let r = this.p5.int(this.p5.random(0, 2)); \r\n                r = r === 1 ? GROW_STATE.GROW : GROW_STATE.SHRINK;\r\n                LightConfigStore.setGrowState(this.curIdx, r, false);\r\n            }\r\n        }\r\n\r\n        // Set new grow states for top and bottom light for the current light. \r\n        calcGrowState();        \r\n    }\r\n}\r\n\r\n//    // Work on creating a clean socket config that we can work with.\r\n//    if (SynthStore.canModify(this.curIdx)) {\r\n//     const newNoteVal = this.analyseTouch(newX);\r\n//     // Has note turned on?\r\n//     if (newNoteVal) {\r\n//         SynthStore.setLocalNote(this.curIdx, 1);\r\n//         // this.p5.fill(this.lightActiveColor);\r\n\r\n//     } else {\r\n//         // new note is off. \r\n//         const oldLocalNoteVal = SynthStore.getLocalNote(this.curIdx);\r\n//         if (oldLocalNoteVal) {\r\n//             SynthStore.setLocalNote(this.curIdx, 0);\r\n//             // this.p5.fill(this.lightActiveColor);\r\n//         }\r\n//     }\r\n// } else {\r\n//    // I can't modify these notes because somebody else has changed them.\r\n// }\r\n\r\n// // Go through all the socket notes and turn them on. \r\n// const curNoteValue = SynthStore.getSocketNote(this.curIdx);\r\n// if (curNoteValue) {\r\n//     this.p5.fill(this.lightActiveColor);\r\n// } else {\r\n//     this.p5.fill(this.lightInactiveColor);\r\n// }","/*\r\n  Name: Sequencer.js\r\n  Author: Amay Kataria\r\n  Date: 03/03/2022\r\n  Description: A class to render the sequencer object on the screen. \r\n*/\r\nimport EditModeStore from \"../stores/EditModeStore\";\r\nimport SequencerStore from \"../stores/SequencerStore\";\r\n\r\nexport default class SequencerBubble {\r\n    constructor(s) {\r\n        // Sketch object. \r\n        this.p5 = s; \r\n\r\n        this.sequencerActiveColor = this.p5.color(255, 0, 0, 200);\r\n        this.sequencerInactiveColor = this.p5.color(255, 0, 0, 100);\r\n    }\r\n\r\n    draw(light) {\r\n        let indices = SequencerStore.getIndices();\r\n        let isEditMode = EditModeStore.isEditMode;\r\n        for (let i = 0; i < indices.length; i++) {\r\n            let idx = indices[i];     \r\n            if (idx === light.curIdx) {\r\n                if (isEditMode) {\r\n                    this.p5.fill(this.sequencerInactiveColor);                \r\n                } else {\r\n                    this.p5.fill(this.sequencerActiveColor);                \r\n                }\r\n                let newX = light.getNewPos(); \r\n                this.p5.ellipse(newX + light.lightWidth/2, this.p5.height/2, light.lightWidth, light.lightWidth);\r\n            }\r\n        }\r\n    }\r\n}\r\n","/*\r\n  Name: LightManager.js\r\n  Author: Amay Kataria\r\n  Date: 02/19/2022\r\n  Description: A class responsible for handling all the lights. This class is the most critical class\r\n  in this project. \r\n*/\r\nimport Light from './Light'\r\nimport LightConfigStore from \"../stores/LightConfigStore\";\r\nimport SequencerBubble from './SequencerBubble';\r\n\r\nconst NUM_LIGHTS = 24\r\n\r\nexport default class LightManager {\r\n    constructor(s) {\r\n        this.p5 = s; \r\n        this.lights = [];\r\n        this.showResetAnimation = false; \r\n        this.curTime = 0; \r\n        this.var = 0; \r\n        this.dir = true; \r\n\r\n        this.sequencerBubble = new SequencerBubble(s);\r\n    }\r\n    \r\n    setup() {\r\n        // Prepare the light collection.\r\n        this.prepareLights();\r\n    }\r\n\r\n    prepareLights() {\r\n        this.lights = []; \r\n\r\n        // Set max height again since the canvas has been resized. \r\n        LightConfigStore.setMaxHeight(this.p5.height);\r\n        \r\n        // Distance between each tube. \r\n        let lightIncrement = (this.p5.width) / NUM_LIGHTS;\r\n\r\n        // Width of each light is half the distance between each light.\r\n        let lightWidth = lightIncrement / 2;\r\n        for (let i = 0; i < NUM_LIGHTS; i++) {\r\n            let xPos = i * lightIncrement; \r\n            // Create a new light instance. \r\n            let l = new Light(this.p5, i, xPos, this.p5.height, lightWidth);\r\n            this.lights.push(l);\r\n        }\r\n    }\r\n    \r\n    draw(meshEllipsePos, boundaryWidth) {\r\n        // Draw the lights based on the state. \r\n        for (let i = 0; i < this.lights.length; i++) {\r\n            let light = this.lights[i]; \r\n            light.draw(meshEllipsePos, boundaryWidth);\r\n            this.sequencerBubble.draw(light);\r\n        }\r\n\r\n        // If I'm in Synth mode\r\n        \r\n    }\r\n}","/*\r\n  Name: MeshManager.js\r\n  Author: Amay Kataria\r\n  Date: 02/19/2022\r\n  Description: A class responsible for drawing the connections from the ellipse to all\r\n  the moving lights on the canvas. \r\n*/\r\nimport EditModeStore from \"../stores/EditModeStore\";\r\n\r\n// Handles all the code related to interaction with the canvas.\r\nconst EASING = 0.08;  \r\nconst ELLIPSE_RADIUS = 50; \r\nexport default class MeshManager {\r\n    constructor(s) {\r\n        this.p5 = s; \r\n        this.ellipsePos = this.p5.createVector(this.p5.width/3, this.p5.height/2);\r\n        this.boundaryWidth = this.p5.width/1.5;\r\n        this.prevMouseX = 0;\r\n        this.prevMouseY = 0; \r\n    }\r\n\r\n    draw(lights) {\r\n        let isEditMode = EditModeStore.isEditMode; \r\n        let isUserInteracting = EditModeStore.isUserInteracting;\r\n        let isPopupActive = EditModeStore.isPopupActive;        \r\n        if (isEditMode && isUserInteracting) {\r\n            let mouseX, mouseY;\r\n            // Don't trap mouseX or mouseY if I'm in the popup. \r\n            if (isPopupActive || this.p5.mouseY > this.p5.height || this.p5.mouseY < 0) {\r\n                mouseX = this.prevMouseX;\r\n                mouseY = this.prevMouseY; \r\n            } else {\r\n                mouseX = this.p5.mouseX;\r\n                mouseY = this.p5.mouseY;\r\n            }\r\n\r\n            // When scoring keep this easing functionality for aesthetics.\r\n            this.ellipsePos['x'] += (mouseX - this.ellipsePos['x']) * EASING;\r\n            this.ellipsePos['y'] += (mouseY - this.ellipsePos['y']) * EASING; \r\n\r\n            // Make sure the ellipse doesn't go outside the boundary.\r\n            this.containEllipse();\r\n\r\n            // Draw pull lines for top and bottom lights.\r\n            for (let i = 0; i < lights.length; i++) {\r\n                let light = lights[i];\r\n\r\n                let pos = light.topPos;\r\n                let height = light.getHeight();\r\n                if (height < this.p5.height && height > 0) {\r\n                    this.drawLine(pos, this.ellipsePos, i);\r\n                }\r\n            }\r\n\r\n            // Draw ellipse tracking the mouse. \r\n            this.drawEllipse();\r\n\r\n            this.prevMouseX = mouseX;\r\n            this.prevMouseY = mouseY;\r\n        }        \r\n    }\r\n    \r\n    // Calculate new ellipse position. \r\n    containEllipse() {\r\n        if (this.ellipsePos['x'] > this.p5.width) {\r\n            this.ellipsePos['x'] = this.p5.width;\r\n        } \r\n\r\n        if (this.ellipsePos['x'] < 0) {\r\n            this.ellipsePos['x'] = 0;\r\n        } \r\n\r\n        if (this.ellipsePos['y'] > this.p5.height) {\r\n            this.ellipsePos['y'] = this.p5.height;\r\n        } \r\n\r\n        if (this.ellipsePos['y'] < 0) {\r\n            this.ellipsePos['y'] = 0;\r\n        } \r\n    }\r\n\r\n    drawEllipse() {\r\n        // let isUserInteracting = EditModeStore.isUserInteracting; \r\n        // if (isUserInteracting) {\r\n        // this.p5.fill(this.p5.color(255, 255, 255, 50));\r\n        //     this.p5.noStroke();\r\n        //     this.p5.ellipse(this.ellipsePos['x'], this.ellipsePos['y'], this.boundaryWidth);  \r\n        // }\r\n        // // Outer ellipse boundary \r\n\r\n\r\n        // Inner ellipse\r\n        this.p5.fill(this.p5.color(255, 255, 255, 150));\r\n        this.p5.strokeWeight(3);\r\n        this.p5.stroke(this.p5.color('black'));\r\n        this.p5.ellipse(this.ellipsePos['x'], this.ellipsePos['y'], ELLIPSE_RADIUS);  \r\n    }\r\n\r\n    drawLine(startPoint, endPoint, i) {\r\n        let opacity = this.p5.map(i, 0, 24, 100, 200);\r\n        let weight = this.p5.map(i, 0, 25, 2, 4);\r\n        this.p5.stroke(this.p5.color(255, 255, 255, opacity));\r\n        this.p5.strokeWeight(weight);\r\n        this.p5.line(startPoint['x'], startPoint['y'], endPoint['x'], endPoint['y']);\r\n    }\r\n}","/*\r\n  Name: TouchEllipseManager.js\r\n  Author: Amay Kataria\r\n  Date: 05/02/2022\r\n  Description: Class responsible to highlight all touches in the synth mode. Synth mode is important\r\n  and is one of the new additions to the app.\r\n*/\r\n\r\n// Handles all the code related to interaction with the canvas.\r\nimport TouchStore from \"../stores/TouchStore\";\r\nimport ModeStore, {MODE} from \"../stores/ModeStore\";\r\n\r\nconst ELLIPSE_RADIUS = 35; \r\n\r\nexport default class TouchEllipseManager {\r\n    constructor(s) {\r\n        this.p5 = s; \r\n    }\r\n\r\n    draw() {\r\n        if (ModeStore.getCurrentMode() === MODE.SYNTH) {\r\n            const touches = TouchStore.getTouches();\r\n            touches.forEach(t => {\r\n                this.drawEllipse(t.x, t.y);\r\n            });\r\n        }\r\n    }\r\n\r\n    drawEllipse(posX, posY) {\r\n        // Inner ellipse\r\n        this.p5.fill(this.p5.color(255, 255, 255, 150));\r\n        this.p5.strokeWeight(3);\r\n        this.p5.stroke(this.p5.color('black'));\r\n        this.p5.ellipse(posX, posY, ELLIPSE_RADIUS);  \r\n    }\r\n}","/*\r\n  Name: bpmManager.js\r\n  Author: Amay Kataria\r\n  Date: 02/20/2022\r\n  Description: A class responsible for handling the logic to calculate the bpm for the current configuration.\r\n*/\r\n\r\nimport BpmStore from '../stores/BpmStore'\r\nimport EditModeStore from \"../stores/EditModeStore\";\r\n\r\nconst MAX_BPM = 200;\r\nconst MIN_BPM = 100;\r\nexport default class bpmManager {\r\n    constructor(s) {\r\n        this.p5 = s;\r\n        this.curBpm = BpmStore.getLocalBpm();\r\n        BpmStore.subscribe(() => {\r\n            this.curBpm = BpmStore.getLocalBpm();\r\n        }); \r\n        this.curTime = ''; \r\n    }\r\n\r\n    // Simple BPM calculator.\r\n    update(ellipsePos, lights) {\r\n        let isEditMode = EditModeStore.isEditMode; \r\n        let isUserInteracting = EditModeStore.isUserInteracting;\r\n        // The user must be in Edit Mode and be interacting for the\r\n        // local bpm to be changing. \r\n        if (isUserInteracting && isEditMode) { \r\n            let shouldAdd = false; \r\n            if (((ellipsePos['x'] > this.p5.width/2) && (ellipsePos['y'] < this.p5.height/2))\r\n                || ((ellipsePos['x'] < this.p5.width/2) && (ellipsePos['y'] > this.p5.height/2))){\r\n                shouldAdd = true; \r\n            } else {\r\n                shouldAdd = false; \r\n            }\r\n            \r\n            // Number of lights that are on. \r\n            let sum = 0; \r\n            for (let i = 0; i < lights.length; i++) {\r\n                let light = lights[i];\r\n                if (light.isOn()) {\r\n                    sum += 1; \r\n                }\r\n            }\r\n\r\n            // Time that has elapsed. \r\n            let elapsedTime = Date.now() - this.curTime; \r\n            let v = this.p5.sin((elapsedTime + 0.1) / (sum + 1)); \r\n            let mapped =  this.p5.map(v, -1, 1, 0, 0.1);\r\n            \r\n            // Calculate the new bpm. \r\n            if (shouldAdd) {\r\n                this.curBpm = this.curBpm + mapped * 3.0;\r\n            }\r\n\r\n            if (!shouldAdd) {\r\n                this.curBpm = this.curBpm - mapped * 0.01;\r\n            }\r\n            \r\n            if (this.curBpm < MIN_BPM) {\r\n                this.curBpm = MIN_BPM; \r\n            } \r\n\r\n            if (this.curBpm > MAX_BPM) {\r\n                this.curBpm = MAX_BPM;\r\n            }\r\n\r\n            // Send updates to component subscribed for the event. \r\n            BpmStore.setLocalBpm(Math.floor(this.curBpm));\r\n        } else {\r\n            // Keep snapshotting the time, so we can calculate\r\n            // the elapsed time. \r\n            this.curTime = Date.now(); \r\n        }\r\n    }\r\n}","/*\r\n  Name: WaveCanvas.js\r\n  Author: Amay Kataria\r\n  Date: 02/19/2022\r\n  Description: Class responsible to paint the interactive P5.js canvas.\r\n*/\r\n\r\nimport React from 'react'\r\nimport Radium from 'radium'\r\nimport {color} from './CommonStyles'\r\nimport p5 from 'p5'\r\nimport { ORIENTATION } from './App'\r\nimport EditModeStore from '../stores/EditModeStore'\r\nimport ModeStore, {MODE} from '../stores/ModeStore'\r\nimport TouchStore from '../stores/TouchStore'\r\nimport LightManager from './LightManager'\r\nimport MeshManager from './MeshManager'\r\nimport TouchEllipseManager from './TouchEllipseManager'\r\nimport BpmManager from './BpmManager'\r\nimport TimerStore from '../stores/TimerStore'\r\nimport LightConfigStore from '../stores/LightConfigStore'\r\n\r\nvar sketch = (s) => {\r\n  let lightManager, meshManager, bpmManager, touchEllipseManager; \r\n  let shouldTrigger = false; \r\n  s.setup = () => {\r\n    let canvasContainer = s.select('#canvasContainer');\r\n    let height = canvasContainer.height;\r\n    s.createCanvas(window.innerWidth, height);\r\n\r\n    lightManager = new LightManager(s);\r\n    meshManager = new MeshManager(s);\r\n    bpmManager = new BpmManager(s); \r\n    touchEllipseManager = new TouchEllipseManager(s);\r\n\r\n    lightManager.setup();\r\n  };\r\n\r\n  s.draw = () => {\r\n    s.background(s.color(0, 0, 0));  \r\n    lightManager.draw(meshManager.ellipsePos, meshManager.boundaryWidth);\r\n    meshManager.draw(lightManager.lights); \r\n    bpmManager.update(meshManager.ellipsePos, lightManager.lights);\r\n    touchEllipseManager.draw();\r\n  };\r\n\r\n  s.mousePressed = () => {\r\n    TouchStore.setTouches(s.touches);\r\n    const currentMode = ModeStore.currentMode; \r\n    // For score mode, we do good things. \r\n    if (currentMode === MODE.SCORE) {\r\n      if (s.mouseY > s.height || s.mouseY < 0) {\r\n        // Ignore. \r\n      } else if (!EditModeStore.isPopupActive) {\r\n        console.log('Doing it');\r\n        EditModeStore.setUserInteracting(true); \r\n        EditModeStore.setEditMode(true);\r\n        TimerStore.cancelReset();\r\n        shouldTrigger = true; \r\n      }\r\n    }\r\n  };\r\n\r\n  s.mouseMoved = () => {\r\n    const mouseVal = {x: s.mouseX, y: s.mouseY};\r\n    TouchStore.setTouches([mouseVal]);\r\n  }\r\n\r\n  s.touchMoved = () => {\r\n    TouchStore.setTouches(s.touches);\r\n  }\r\n\r\n  s.touchEnded = () => {\r\n    TouchStore.setTouches(s.touches);\r\n    if (!EditModeStore.isPopupActive) {\r\n      EditModeStore.setUserInteracting(false); \r\n      let hasConfigEdited = LightConfigStore.hasConfigEdited;\r\n      if (shouldTrigger && hasConfigEdited) {\r\n        console.log('Schedule popup')\r\n        TimerStore.startTimer();\r\n        shouldTrigger = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  s.windowResized = () => {\r\n    setTimeout(() => {\r\n      console.log('Canvas Resized.');\r\n      let canvasContainer = s.select('#canvasContainer');\r\n      let height = canvasContainer.height;\r\n      s.resizeCanvas(window.innerWidth, height); \r\n  \r\n      // Prepare the lights again. \r\n      lightManager.prepareLights();\r\n    }, 500);\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    position: 'relative',\r\n    backgroundColor: color.bgBlack,\r\n    margin: 0,\r\n    padding: 0,\r\n    outline: 'none',\r\n    zIndex: '1'\r\n  },\r\n\r\n  hide: {\r\n    display: 'none'\r\n  },\r\n\r\n  show: {\r\n    display: 'inline'\r\n  }\r\n};\r\n\r\nclass WaveCanvas extends React.Component {\r\n  constructor(props) {\r\n    super(props);   \r\n    this.containerRef = React.createRef();\r\n    this.sketchRef = React.createRef(); \r\n    this.doesSketchExist = false; \r\n\r\n    this.state = {\r\n      currentMode: ModeStore.getCurrentMode()\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Wave canvas mounted');    \r\n    ModeStore.subscribe(this.onModeUpdate.bind(this)); \r\n  }\r\n\r\n  componentDidUpdate() {\r\n      // Don't recreate the sketch.\r\n      if (!this.doesSketchExist) {\r\n        console.log('New Sketch');\r\n        this.myP5 = new p5(sketch, this.sketchRef.current);   \r\n        this.doesSketchExist = true;\r\n      }\r\n  }\r\n  \r\n  render() {     \r\n    let heightStyle = this.getHeightStyle();\r\n    let containerStyle = [styles.container, heightStyle];\r\n    let canvasStyle = [containerStyle, styles.show];\r\n    return (\r\n      <>\r\n          <div id={'canvasContainer'} \r\n            ref={this.sketchRef} \r\n            style={canvasStyle}>\r\n          </div>\r\n          {/* <Synth wrapperStyle={synthStyle} /> */}\r\n      </>\r\n    );\r\n  }\r\n\r\n  onModeUpdate(newMode) {\r\n    this.setState({\r\n      currentMode: newMode\r\n    });\r\n  }\r\n\r\n  getHeightStyle() {\r\n    let height = this.getHeight();\r\n    let heightStyle = {\r\n      height: height + 'px'\r\n    };\r\n    return heightStyle; \r\n  }\r\n\r\n  getHeight() {\r\n    let deviceHeight = window.innerHeight;\r\n    let deviceWidth = window.innerWidth; \r\n    let c = 0; \r\n    if (this.props.orientation === ORIENTATION.PORTRAIT) {\r\n      if (deviceHeight < 900) {\r\n        c = 0.8;\r\n      }\r\n\r\n      if (deviceHeight > 900 && deviceHeight < 1000) {\r\n        c = 0.85;\r\n      }\r\n\r\n      if (deviceHeight > 1000) {\r\n        c = 0.88; \r\n      }\r\n    }\r\n\r\n    if (this.props.orientation === ORIENTATION.LANDSCAPE) {\r\n      if (deviceWidth < 1000) {\r\n        c = 0.70;  \r\n      } \r\n\r\n      if (deviceWidth > 1000) {\r\n        c = 0.82;\r\n      }\r\n    }\r\n\r\n    return deviceHeight * c;\r\n  }\r\n}\r\n\r\nexport default Radium(WaveCanvas);","/*\r\n  Name: BottomBar.js\r\n  Author: Amay Kataria\r\n  Date: 02/19/2022\r\n  Description: React component for the bottom bar on the page. This has the send button. \r\n*/\r\nimport React from 'react'\r\nimport Radium from 'radium'\r\nimport { ORIENTATION } from './App';\r\nimport {color, fontFamily, fontSize, padding} from './CommonStyles'\r\nimport Websocket from './Websocket';\r\nimport EditModeStore from '../stores/EditModeStore';\r\nimport BpmStore from '../stores/BpmStore';\r\nimport ConfigIndexStore from '../stores/ConfigIndexStore';\r\nimport LightConfigStore from '../stores/LightConfigStore';\r\nimport TimerStore from '../stores/TimerStore';\r\nimport ModeStore, {MODE} from '../stores/ModeStore'\r\n\r\nconst styles = {\r\n    container: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        paddingLeft: padding.small,\r\n        paddingRight: padding.small,\r\n        // // // Common Styles\r\n        color: color.fbWhite,\r\n        fontFamily: fontFamily.josefin,\r\n        fontSize: fontSize.lessBig,\r\n        letterSpacing: '2px',\r\n        zIndex: '1',\r\n    },\r\n\r\n    info: {\r\n        backgroundColor: color.bgBlack,\r\n        fontFamily: fontFamily.heatwave,\r\n        letterSpacing: '2px',\r\n        padding: padding.verySmall,\r\n        cursor: 'default'\r\n    },\r\n\r\n    button: {\r\n      cursor: 'pointer',\r\n      borderStyle: 'solid',\r\n      borderWidth: '1.8px',\r\n      borderColor: color.fgWhite,\r\n      boxShadow:'0px 1px 1px black' \r\n    },\r\n\r\n    disabled: {\r\n      backgroundColor: color.disabled\r\n    }\r\n};\r\n\r\nclass BottomBar extends React.Component {\r\n  constructor(props) {\r\n    super(props); \r\n    this.state={\r\n      localBpm: '',\r\n      dbBpm: '',\r\n      configIndex: '',\r\n      isEditMode: false,\r\n      isSendEnabled: LightConfigStore.hasConfigEdited,\r\n      currentMode: ModeStore.getCurrentMode()\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    BpmStore.subscribe(this.onBpmUpdated.bind(this));\r\n    ConfigIndexStore.subscribe(this.onConfigIndexUpdated.bind(this));\r\n    EditModeStore.subscribe(this.onEditModeUpdate.bind(this));\r\n    LightConfigStore.subscribeForConfigChange(this.onLightConfigChange.bind(this));\r\n    ModeStore.subscribe(this.onModeUpdate.bind(this));\r\n  }\r\n \r\n  render() {\r\n    let bpm = this.state.isEditMode ? this.state.localBpm : this.state.dbBpm;\r\n    let indices = this.state.configIndex; \r\n    let heightStyle = this.getHeightStyle();\r\n    let elements = this.getElements(heightStyle, indices, bpm);\r\n    return elements; \r\n  }\r\n\r\n  getElements(heightStyle, indices, bpm) {\r\n    let leftItem = this.getLeftItem(indices); \r\n    let sendButton = this.getSendButton();\r\n    let bpmNum = (this.state.currentMode === MODE.SYNTH || this.state.currentMode === MODE.SWEEP) ? '' : bpm;\r\n    return (\r\n      <div style={[styles.container, heightStyle]}>\r\n        { leftItem }\r\n        {<div style={styles.info}>{bpmNum + 'bpm'}</div>}\r\n        { sendButton }\r\n      </div>  \r\n    );\r\n  }\r\n\r\n  getLeftItem(indices) {\r\n    let item = '';\r\n    if (this.state.currentMode === MODE.SYNTH || this.state.currentMode === MODE.SWEEP) {\r\n      item = (<div style={styles.info}>{0}</div>);\r\n    } else {\r\n      item = this.state.isEditMode ? \r\n        <div\r\n          onClick={this.onBack.bind(this)}\r\n          style={[styles.info, styles.button]}\r\n          >BACK\r\n          </div> : \r\n        (<div style={styles.info}>{indices}</div>);\r\n    }\r\n\r\n    return item; \r\n  }\r\n\r\n  getSendButton() {\r\n    let buttonStyle = [styles.info, styles.button];\r\n    buttonStyle = !this.state.isSendEnabled ? [buttonStyle, styles.disabled] : buttonStyle;\r\n    let onClick = !this.state.isSendEnabled ? () => {} : this.onSend.bind(this);\r\n    return (\r\n      <div \r\n        onClick={onClick} \r\n        style={buttonStyle}\r\n      >SEND\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getHeightStyle() {\r\n    let height = this.getHeight();\r\n    let heightStyle = {\r\n      height: height + 'px'\r\n    };\r\n    return heightStyle; \r\n  }\r\n\r\n  getHeight() {\r\n    let deviceHeight = window.innerHeight;\r\n    let deviceWidth = window.innerWidth;\r\n    let c = 0; \r\n    if (this.props.orientation === ORIENTATION.PORTRAIT) {\r\n      if (deviceHeight < 900) {\r\n        c = 0.1\r\n      }\r\n\r\n      if (deviceHeight > 900 && deviceHeight < 1000) {\r\n        c = 0.075\r\n      }\r\n\r\n      if (deviceHeight > 1000) {\r\n        c = 0.06\r\n      }\r\n    }\r\n\r\n    if (this.props.orientation === ORIENTATION.LANDSCAPE) {\r\n      if (deviceWidth < 1000) {\r\n        c = 0.15; \r\n      }\r\n\r\n      if (deviceWidth > 1000) {\r\n        c = 0.065; \r\n      }\r\n    }\r\n\r\n    return deviceHeight * c; \r\n  }\r\n\r\n  onLightConfigChange() {\r\n    let hasConfigChanged = LightConfigStore.hasConfigEdited; \r\n    this.setState({\r\n      isSendEnabled: hasConfigChanged\r\n    });\r\n  }\r\n\r\n  onEditModeUpdate() {\r\n    let isEditMode = EditModeStore.isEditMode; \r\n    // Don't re-render if we are already in the state. \r\n    if (this.state.isEditMode !== isEditMode) {\r\n      this.setState({\r\n        isEditMode: isEditMode        \r\n      });\r\n    }\r\n  }\r\n\r\n  onBpmUpdated() {\r\n    let dbBpm = BpmStore.getDbBpm();\r\n    let localBpm = BpmStore.getLocalBpm();\r\n\r\n    // Update DB bpm.\r\n    if (dbBpm !== this.state.dbBpm) {\r\n      this.setState({\r\n        dbBpm: dbBpm\r\n      });\r\n    }\r\n\r\n    // Update local bpm. \r\n    if (localBpm !== this.state.localBpm) {\r\n      this.setState({\r\n        localBpm: localBpm\r\n      });\r\n    }\r\n  }\r\n\r\n  onConfigIndexUpdated() {\r\n    let newConfigIndex = ConfigIndexStore.getConfigIndex();\r\n    if (newConfigIndex !== this.state.configIndex) {\r\n      this.setState({\r\n        configIndex: newConfigIndex\r\n      });\r\n    }\r\n  }\r\n\r\n  onSend(event) {\r\n    event.stopPropagation();\r\n    EditModeStore.setEditMode(false);\r\n    EditModeStore.setUserInteracting(false);\r\n    TimerStore.cancelPopup();\r\n    // Just before committing this. \r\n    Websocket.commitLightConfigData();\r\n  }\r\n\r\n  onBack(event) {\r\n    event.stopPropagation();\r\n    EditModeStore.setEditMode(false);\r\n    EditModeStore.setUserInteracting(false);\r\n    this.setState({\r\n      isEditMode: false\r\n    });\r\n  }\r\n\r\n  onModeUpdate(newMode) {\r\n    this.setState({\r\n      currentMode: newMode\r\n    });\r\n  }\r\n}\r\n\r\nexport default Radium(BottomBar);","/*\r\n  Name: ModesBar.js\r\n  Author: Amay Kataria\r\n  Date: 04/13/2023\r\n  Description: A component to contain the buttons for the modes: Synth, Score, Dream, and Sweep\r\n*/\r\n\r\nimport React from \"react\";\r\nimport Radium from \"radium\";\r\nimport ModeStore, { MODE } from \"../stores/ModeStore\";\r\nimport { ORIENTATION } from './App';\r\nimport {color, fontFamily, fontSize, padding} from './CommonStyles'\r\nimport TimerStore from \"../stores/TimerStore\";\r\nimport { PopupType } from \"./Popup\";\r\n\r\nconst styles = {\r\n    container: {\r\n        position: 'relative',\r\n        backgroundColor: color.bgBlack,\r\n        borderStyle: 'none',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        outline: 'none',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        paddingLeft: padding.small,\r\n        paddingRight: padding.small,\r\n        // // // Common Styles\r\n        color: color.fbWhite,\r\n        fontFamily: fontFamily.josefin,\r\n        fontSize: fontSize.lessBig,\r\n        letterSpacing: '2px',\r\n        zIndex: '1',\r\n    },\r\n\r\n    buttonStyle: {\r\n        backgroundColor: color.fgWhite,\r\n        color: color.bgBlack,\r\n        borderStyle: 'none',\r\n        fontFamily: fontFamily.heatwave,\r\n        letterSpacing: '2px',\r\n        padding: padding.verySmall,\r\n        cursor: 'default'\r\n    },\r\n\r\n    selectedButton: {\r\n        backgroundColor: color.selected\r\n    }\r\n}\r\n\r\nclass ModesBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        ModeStore.subscribe(this.onModeUpdate.bind(this));\r\n        this.state = {\r\n            currentMode: ModeStore.getCurrentMode()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let heightStyle = this.getHeightStyle();\r\n        let synthButton = this.state.currentMode === MODE.SYNTH ? [styles.buttonStyle, styles.selectedButton] : [styles.buttonStyle];\r\n        let dreamButton = this.state.currentMode === MODE.DREAM ? [styles.buttonStyle, styles.selectedButton] : [styles.buttonStyle];\r\n        let scoreButton = this.state.currentMode === MODE.SCORE ? [styles.buttonStyle, styles.selectedButton] : [styles.buttonStyle];\r\n        let sweepButton = this.state.currentMode === MODE.SWEEP ? [styles.buttonStyle, styles.selectedButton] : [styles.buttonStyle];\r\n        return (\r\n            <div style={[styles.container, heightStyle]}>\r\n                <button onClick={this.handleClick.bind(this, MODE.SYNTH)} style={synthButton}>SYNTH</button>\r\n                <button onClick={this.handleClick.bind(this, MODE.DREAM)} style={dreamButton}>DREAM</button>\r\n                <button onClick={this.handleClick.bind(this, MODE.SCORE)} style={scoreButton}>SCORE</button>\r\n                <button onClick={this.handleClick.bind(this, MODE.SWEEP)} style={sweepButton}>SWEEP</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleClick(newMode) {\r\n        // Create a small popup for the SCORE.\r\n        if (newMode === MODE.SCORE) {\r\n            TimerStore.showPopup(PopupType.Score);\r\n        }\r\n        ModeStore.setMode(newMode, true);\r\n    }\r\n\r\n    onModeUpdate(newMode) {\r\n        this.setState({\r\n            currentMode: newMode\r\n        });\r\n    }\r\n\r\n    getHeightStyle() {\r\n        let height = this.getHeight();\r\n        let heightStyle = {\r\n          height: height + 'px'\r\n        };\r\n        return heightStyle; \r\n    }\r\n    \r\n    getHeight() {\r\n        let deviceHeight = window.innerHeight;\r\n        let deviceWidth = window.innerWidth;\r\n        let c = 0; \r\n        if (this.props.orientation === ORIENTATION.PORTRAIT) {\r\n            if (deviceHeight < 900) {\r\n            c = 0.1\r\n            }\r\n\r\n            if (deviceHeight > 900 && deviceHeight < 1000) {\r\n            c = 0.075\r\n            }\r\n\r\n            if (deviceHeight > 1000) {\r\n            c = 0.06\r\n            }\r\n        }\r\n\r\n        if (this.props.orientation === ORIENTATION.LANDSCAPE) {\r\n            if (deviceWidth < 1000) {\r\n                c = 0.15; \r\n            }\r\n\r\n            if (deviceWidth > 1000) {\r\n                c = 0.065; \r\n            }\r\n        }\r\n\r\n        return deviceHeight * c; \r\n    }\r\n}\r\n\r\nexport default Radium(ModesBar);","/*\n  Name: VisLight.js\n  Author: Amay Kataria\n  Date: 03/25/2024\n  Description: A special class to represent a Light on data-visualization page. \n*/\n\nexport default class VisLight {\n    constructor(s, i, xPos, yPos, lightWidth) {\n        // Sketch object. \n        this.p5 = s; \n\n        // Light's width. \n        this.lightWidth = lightWidth;\n\n\n        // Origin point at the bottom of the canvas. \n        this.pos = this.p5.createVector(xPos, yPos);\n        \n        // Point at the top. \n        let newX = this.getNewPos() + this.lightWidth/2; // Keep this at the center of the light.\n        this.topPos = this.p5.createVector(newX, 0); // By default at the top. (Always changing)\n        this.top = this.p5.createVector(newX, 0); \n        \n        // Colors. \n        this.lightActiveColor = this.p5.color('white');\n        this.lightInactiveColor = this.p5.color(255, 255, 255, 125);\n        this.lightBgColor = this.p5.color(255, 255, 255, 30);\n        this.lightPointColor = this.p5.color('green'); // Only debug.\n\n        // Store the current light config. \n        this.curIdx = i; \n    }\n\n    draw() {\n        let newX = this.getNewPos();\n        this.p5.noStroke();  \n        this.p5.fill(this.lightInactiveColor);\n        this.p5.rect(newX, this.pos['y'], this.lightWidth, -this.p5.height);  \n    }\n\n    drawLightPoint() {\n        let newX = this.getNewPos();\n        this.p5.fill(this.lightPointColor)\n        this.p5.circle(newX, this.pos['y'], 5);\n    }\n    \n    getNewPos() {\n        return this.pos['x'] + this.lightWidth/2; \n    }\n}","/*\n  Name: DataPoint.js\n  Author: Amay Kataria\n  Date: 03/25/2024\n  Description: This is a special class to render a data point. \n*/\n\nexport default class DataPoint {\n    constructor(s, xPos, yPos, value) {\n      // Sketch variable\n      this.p5 = s;\n      this.xPos = xPos; \n      this.yPos = yPos; \n      this.val = value;\n      this.rot = 0;\n    }\n\n    draw(pointSize, pointShape, rotate, rotateSpeed, showInactive, showActive, colorInactive, colorActive) {\n      if (this.val === 1 && showActive || this.val === 0 && showInactive) {\n          // Choose color\n          if (this.val === 1) {\n            this.p5.fill(colorInactive);\n          } else {\n            this.p5.fill(colorActive);\n          }\n\n          this.p5.push();\n          this.p5.translate(this.xPos, this.yPos);\n          this.p5.rotate(this.rot);\n\n          if (rotate) {\n            this.rot += rotateSpeed;\n          }\n\n          // Circle\n          if (pointShape === 'circle') \n            this.p5.circle(0, 0, pointSize);\n            \n          // Rectangle\n          if (pointShape === 'rectangle') {\n            this.p5.push();\n            this.p5.rectMode(this.p5.CENTER);\n            this.p5.rect(0, 0, pointSize, pointSize);\n            this.p5.pop();\n          }\n\n          // Triangle\n          if (pointShape === 'triangle') {\n            const x = 0;\n            const y = 0;\n            this.p5.triangle(x-pointSize, y-pointSize, x+pointSize, y-pointSize, x, y+pointSize);  \n          }\n\n          if (pointShape === 'arc') {\n            this.p5.arc(0, 0, pointSize*2, pointSize*2, 0, this.p5.PI);\n          }\n\n          this.p5.pop();\n        }\n    }\n}","/*\n  Name: VistManager.js\n  Author: Amay Kataria\n  Date: 03/25/2024\n  Description: This is a special manager, exclusively to visualize the data in Supersynthesis. This initializes the\n  lights and the data points with the required value and then draws them. \n*/\n\nimport FullDbConfigStore from '../../stores/FullDbConfigStore';\nimport VisLight from './VisLight'\nimport DataPoint from './DataPoint';\n\nconst NUM_LIGHTS = 24\n\nexport default class VisManager {\n    constructor(s) {\n        this.p5 = s; \n        this.visLights = [];\n        this.dataPoints = []; // Dumb type. Will be update later.\n        // NOTE: This value is the same as in the React component. Ideally, it should be passed through to \n        // this component.\n        this.numEntries = 50; // Dumb value. Will be updated later. \n        this.pointSize = 5;\n        this.showPoints = true;\n        this.pointShape = \"circle\";\n        this.rotate = false;\n        this.rotateSpeed = 0.01;\n        this.showInactive = true;\n        this.showActive = true;\n        this.colorActive = '#FFFFFF';\n        this.colorInactive = '#000000';\n\n        this.showLights = true;\n\n        // Prepare all the lights. \n        this.prepareLights();\n\n        // Retrieve fullDB data and prepare all the data.\n        FullDbConfigStore.getLightConfigs(() => this.prepareDataPoints());\n    }\n\n    // It should be called when light configs are actually ready. \n    prepareDataPoints() {\n        // Prepare empty array.\n        this.dataPoints = new Array(NUM_LIGHTS).fill(0).map(a => []);\n        let data = FullDbConfigStore.allLightConfigs;\n\n        // Distance between each tube. \n        const lightIncrement = (this.p5.width) / NUM_LIGHTS;\n        const lightWidth = lightIncrement / 2; \n        if (data) { \n            for (let i = 0; i < this.numEntries; i++) {\n                let lights = data[i]['config']['lights'];\n                for (let j = 0; j < NUM_LIGHTS; j++) {\n                    let v = lights[j];\n                    \n                    // Calculate the light position based on different variables.\n                    const xPos = j * lightIncrement + lightWidth; \n                    const yPos = this.p5.map(i, 0, this.numEntries, 10, this.p5.height);\n                    \n                    // Create a new data point.\n                    let dp = new DataPoint(this.p5, xPos, yPos, v);\n                    this.dataPoints[j].push(dp);\n                }\n            }\n            \n            // console.log(this.dataPoints);\n        }\n    }\n\n    prepareLights() {\n        this.visLights = []; \n\n        // Distance between each tube. \n        const lightIncrement = (this.p5.width) / NUM_LIGHTS;\n\n        // Width of each light is half the distance between each light.\n        const lightWidth = lightIncrement / 2;\n        for (let i = 0; i < NUM_LIGHTS; i++) {\n            let xPos = i * lightIncrement; \n            // Create a new light instance. \n            let l = new VisLight(this.p5, i, xPos, this.p5.height, lightWidth);\n            this.visLights.push(l);\n        }\n    }\n    \n    draw() {\n        // Draw the lights based on the state. \n        for (let i = 0; i < this.visLights.length; i++) {\n            if (this.showLights) {\n                let light = this.visLights[i]; \n                light.draw();\n            }\n\n            // Draw all the points on that column.\n            if (this.dataPoints.length > 0 && this.showPoints) {\n                for (let j = 0; j < this.dataPoints[i].length; j++) {\n                    this.dataPoints[i][j].draw(this.pointSize, this.pointShape, this.rotate, this.rotateSpeed, this.showActive, this.showInactive, this.colorActive, this.colorInactive);\n                }\n            }\n        }\n    }\n\n    guiUpdates(newData) {\n        // Num Entries\n        const newNumEntries = newData['numEntries'];\n        if (this.numEntries !== newNumEntries) {\n            this.numEntries = newNumEntries; \n            this.prepareDataPoints();\n        }\n\n        // Point Size\n        this.pointSize = newData['pointSize'];\n\n        // Show Point\n        this.showPoints = newData['showPoints'];\n        \n        // Point Shape\n        this.pointShape = newData['pointShape'];\n\n        this.rotate = newData['rotate'];\n\n        this.rotateSpeed = newData['rotateSpeed'];\n\n        this.showInactive = newData['showInactive'];\n\n        this.showActive = newData['showActive'];\n\n        this.showLights = newData['showLights'];\n\n        this.colorActive = newData['colorActive'];\n        this.colorInactive = newData['colorInactive'];\n    }\n}","/*\r\n  Name: VisCanvas.js\r\n  Author: Amay Kataria\r\n  Date: 03/25/2024\r\n  Description: A special canvas to render a data visualization of all the data that has been created here.\r\n*/\r\n\r\nimport React, {useEffect, useRef, useState} from 'react'\r\nimport FullDbConfigStore from '../../stores/FullDbConfigStore'\r\nimport Radium from 'radium'\r\nimport {color} from '../CommonStyles'\r\nimport VisManager from './VisManager'\r\nimport p5 from 'p5'\r\nimport DatGui, { DatNumber, DatString, DatBoolean, DatSelect, DatColor } from \"@tim-soft/react-dat-gui\";\r\n\r\nvar sketch = (s) => { \r\n  let visManager;\r\n  s.setup = () => {\r\n    let canvasContainer = s.select('#canvasContainer');\r\n    let height = canvasContainer.height;\r\n    s.createCanvas(window.innerWidth, height);\r\n\r\n    // Vis Manager is the key class that handles all the data management.\r\n    visManager = new VisManager(s);\r\n  };\r\n\r\n  s.draw = () => {\r\n    s.background(s.color(0, 0, 0));   \r\n    visManager.draw();\r\n  };\r\n\r\n  s.windowResized = () => {\r\n    setTimeout(() => {\r\n      console.log('Canvas Resized.');\r\n      let canvasContainer = s.select('#canvasContainer');\r\n      let height = canvasContainer.height;\r\n      s.resizeCanvas(window.innerWidth, height); \r\n\r\n      visManager.prepareLights();\r\n      visManager.prepareDataPoints();\r\n    }, 500);\r\n  }\r\n\r\n  s.updateGuiData = (newData) => {\r\n    visManager.guiUpdates(newData);\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    position: 'relative',\r\n    backgroundColor: color.bgBlack,\r\n    margin: 0,\r\n    padding: 0,\r\n    outline: 'none',\r\n    zIndex: '1'\r\n  },\r\n\r\n  hide: {\r\n    display: 'none'\r\n  },\r\n\r\n  show: {\r\n    display: 'inline'\r\n  }\r\n};\r\n\r\nfunction VisCanvas(props) {\r\n    let sketchRef = useRef();\r\n    let myP5 = useRef();\r\n    let numEntries = useRef();\r\n    \r\n    // GUI Data\r\n    const [numMaxEntries, setMaxEntries] = useState();\r\n    const [data, setData] = useState({\r\n      title: \"Score Visualization\",\r\n      numEntries: 50,\r\n      pointSize: 5,\r\n      showPoints: true,\r\n      pointShape: 'circle',\r\n      rotation: false,\r\n      rotateSpeed: 0.1, \r\n      showInactive: true,\r\n      colorActive: \"#FFFFFF\",\r\n      colorInactive: '#000000',\r\n      showActive: true,\r\n      showLights: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log('New Sketch');\r\n        // Save the value for the ref here. \r\n        myP5.current = new p5(sketch, sketchRef.current); \r\n\r\n        // Query GUI data to fill maxEntries.\r\n        FullDbConfigStore.getLightConfigs(() => {\r\n          setMaxEntries(FullDbConfigStore.allLightConfigs.length);\r\n        });\r\n    }, []);\r\n\r\n    const getHeight = (() => {\r\n        let deviceHeight = window.innerHeight;\r\n        return deviceHeight;\r\n    })\r\n\r\n    const getHeightStyle = (() => {\r\n        let height = getHeight();\r\n        let heightStyle = {\r\n            height: height + 'px'\r\n        };\r\n        return heightStyle; \r\n    })\r\n\r\n    // Update GUI data and push it to the p5.js sketch.\r\n    const handleUpdate = (newData) => {\r\n      setData(prevData =>  {\r\n        return {...prevData, ...newData}\r\n      });\r\n\r\n      // Pass the new data to the p5.js sketch. \r\n      myP5.current.updateGuiData(newData);\r\n    }\r\n\r\n    let heightStyle = getHeightStyle();\r\n    let containerStyle = [styles.container, heightStyle];\r\n    let canvasStyle = [containerStyle, styles.show];\r\n    return (\r\n        <>\r\n          <DatGui data={data} onUpdate={handleUpdate} style={{'zIndex': 2, position: 'absolute'}}>\r\n              <DatString path=\"title\" label=\"Supersynthesis\" />\r\n              <DatNumber\r\n                ref={numEntries}\r\n                path=\"numEntries\"\r\n                label=\"Num Entries\"\r\n                min={0}\r\n                max={numMaxEntries}\r\n                step={1}\r\n              />\r\n              <DatNumber\r\n                path=\"pointSize\"\r\n                label=\"Point Size\"\r\n                min={1}\r\n                max={20}\r\n                step={0.5}\r\n              />\r\n               <DatBoolean\r\n                path=\"showPoints\"\r\n                label=\"Show Points\"\r\n              />\r\n              <DatSelect\r\n                label=\"Point Shape\"\r\n                path=\"pointShape\"\r\n                options={[\"circle\", \"rectangle\", \"triangle\", \"arc\"]}\r\n              />\r\n              <DatBoolean\r\n                path=\"rotate\"\r\n                label=\"Rotate\"\r\n              />\r\n               <DatNumber\r\n                path=\"rotateSpeed\"\r\n                label=\"Rotate Speed\"\r\n                min={0.01}\r\n                max={0.5}\r\n                step={0.01}\r\n              />\r\n              <DatBoolean\r\n                path=\"showInactive\"\r\n                label=\"Show Inactive\"\r\n              />\r\n              <DatColor label=\"Color\" path=\"colorInactive\" />\r\n              <DatBoolean\r\n                path=\"showActive\"\r\n                label=\"Show Active\"\r\n              />\r\n              <DatColor label=\"Color\" path=\"colorActive\" />\r\n              <DatBoolean\r\n                path=\"showLights\"\r\n                label=\"Show Lights\"\r\n              />\r\n          </DatGui>\r\n          <div id={'canvasContainer'} ref={sketchRef} style={canvasStyle}></div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Radium(VisCanvas);\r\n","/*\r\n  Name: App.js\r\n  Author: Amay Kataria\r\n  Date: 02/19/2022\r\n  Description: Entry point component for the application. \r\n*/\r\n\r\n\r\nimport React from 'react'\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\r\nimport Radium from 'radium'\r\n\r\nimport Navbar from './Navbar';\r\nimport WaveCanvas from './WaveCanvas';\r\nimport BottomBar from './Bottombar';\r\nimport ModesBar from './ModesBar';\r\nimport VisCanvas from './Visualization/VisCanvas';\r\n\r\n// Enum to track the device orientation. \r\nexport const ORIENTATION = {\r\n  PORTRAIT: 0,\r\n  LANDSCAPE: 1\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    position: 'fixed',\r\n    WebkitOverflowScrolling: 'touch',\r\n    top: '0%',\r\n    left: '0%',\r\n    right: '0%',\r\n    bottom: '0%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    color: 'white',\r\n    height: '100%',\r\n    width: '100%',\r\n    zIndex: '1'\r\n  },\r\n\r\n  button: {\r\n    width: '100px',\r\n    height: '50px',\r\n    backgroundColor: 'white',\r\n    color: 'black'\r\n  }\r\n};\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props); \r\n    window.addEventListener('resize', this.handleResize.bind(this));\r\n    this.state = {\r\n      orientation: ORIENTATION.PORTRAIT\r\n    };     \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.evaluateOrientation();\r\n    document.addEventListener('gesturestart', function(e) {\r\n      e.preventDefault();\r\n      // special hack to prevent zoom-to-tabs gesture in safari\r\n      document.body.style.zoom = 0.99;\r\n    });\r\n  \r\n    document.addEventListener('gesturechange', function(e) {\r\n        e.preventDefault();\r\n        // special hack to prevent zoom-to-tabs gesture in safari\r\n        document.body.style.zoom = 0.99;\r\n    });\r\n  \r\n    document.addEventListener('gestureend', function(e) {\r\n      e.preventDefault();\r\n      // special hack to prevent zoom-to-tabs gesture in safari\r\n      document.body.style.zoom = 0.99;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={styles.container}>\r\n      <Router basename=\"/\">\r\n        <Routes>\r\n          <Route path=\"/\" element={\r\n              <>\r\n                <Navbar orientation={this.state.orientation} />\r\n                <WaveCanvas orientation={this.state.orientation} />\r\n                <ModesBar orientation={this.state.orientation} />\r\n                <BottomBar orientation={this.state.orientation} />  \r\n              </>\r\n            }\r\n          />\r\n          <Route path=\"/vis\" element={\r\n              <>\r\n                <VisCanvas orientation={this.state.orientation}/>\r\n              </>\r\n          } \r\n          />\r\n        </Routes>\r\n      </Router>\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n  handleResize() {\r\n    // Resize triggered - evaluate orientation and render\r\n    // the components again be it. \r\n    this.evaluateOrientation();\r\n  }\r\n\r\n  evaluateOrientation() {\r\n    let t = (window.innerHeight < window.innerWidth); \r\n    if (t) {\r\n      console.log('App: Landscape');\r\n      this.setState({\r\n        orientation: ORIENTATION.LANDSCAPE\r\n      });\r\n    } else {\r\n      console.log('App: Portrait');\r\n      this.setState({\r\n          orientation: ORIENTATION.PORTRAIT\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Radium(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './font/stylesheet.css';\nimport App from './components/App';\nimport {StyleRoot} from 'radium'\n\n// Use StyleRoot to enable keyframes and media queries for Javascript type\n// styles with Radium in components. \n// Single render function for the entire application. \nReactDOM.render(<StyleRoot><App /></StyleRoot>, document.getElementById('root'));"],"sourceRoot":""}